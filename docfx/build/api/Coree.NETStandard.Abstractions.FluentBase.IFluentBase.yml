### YamlMime:ManagedReference
items:
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase
  commentId: T:Coree.NETStandard.Abstractions.FluentBase.IFluentBase
  id: IFluentBase
  parent: Coree.NETStandard.Abstractions.FluentBase
  children:
  - Coree.NETStandard.Abstractions.FluentBase.IFluentBase.AddValidationError(System.String,System.Exception)
  - Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ContinueOnValidationError
  - Coree.NETStandard.Abstractions.FluentBase.IFluentBase.DisableThrowOnError(System.Boolean)
  - Coree.NETStandard.Abstractions.FluentBase.IFluentBase.EnableThrowOnError
  - Coree.NETStandard.Abstractions.FluentBase.IFluentBase.IsValid
  - Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ValidationErrors
  langs:
  - csharp
  - vb
  name: IFluentBase
  nameWithType: IFluentBase
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase
  type: Interface
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: IFluentBase
    path: ../../src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
    startLine: 81
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.FluentBase
  summary: Serves as a foundational class for fluent interface pattern error handling, enabling mechanisms for both error accumulation and immediate exception throwing, alongside optional continuation after encountering validation errors. This abstract class standardizes error management for classes utilizing fluent interfaces.
  remarks: >-
    Implements IFluentBase, offering:

    - Error accumulation during operations.

    - Conditional continuation of operations post-errors.

    - Flexible toggling between immediate exception throwing or error accumulation, adapting to various error handling strategies.
  example:
  - >-
    Illustrates the use of FluentBase with a concrete Product class and an extension method for price adjustment with comprehensive error handling:

    <pre><code class="lang-csharp">public abstract class FluentBase : IFluentBase

    {
        private bool throwOnError = true;
        public List&lt;Exception&gt; ValidationErrors { get; private set; } = new List&lt;Exception&gt;();
        public bool IsValid =&gt; !ValidationErrors.Any();
        public bool ContinueOnValidationError { get; private set; } = false;

        public void AddValidationError(string message, Exception innerException)
        {
            ValidationErrors.Add(new Exception(message, innerException));
            if (throwOnError)
            {
                throw innerException;
            }
        }

        public IFluentBase EnableThrowOnError()
        {
            throwOnError = true;
            ContinueOnValidationError = false;
            return this;
        }

        public IFluentBase DisableThrowOnError(bool continueOnValidationError = false)
        {
            throwOnError = false;
            ContinueOnValidationError = continueOnValidationError;
            return this;
        }
    }


    // Simplified Product class inheriting FluentBase

    public class Product : FluentBase

    {
        public string Name { get; set; }
        public decimal Price { get; set; }
    }


    // Extension method for Product

    public static class ProductExtensions

    {
        public static Product AdjustPrice(this Product product, decimal adjustment)
        {
            if (!product.IsValid &amp;&amp; !product.ContinueOnValidationError) return product;

            try
            {
                var newPrice = product.Price + adjustment;
                if (newPrice &lt; 0)
                {
                    throw new ArgumentOutOfRangeException(nameof(adjustment), "Adjustment results in a negative price.");
                }
                product.Price = newPrice;
            }
            catch (Exception ex)
            {
                product.AddValidationError($"Error adjusting price by {adjustment}: {ex.Message}", ex);
            }

            return product;
        }
    }</code></pre>
  syntax:
    content: public interface IFluentBase
    content.vb: Public Interface IFluentBase
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.IsValid
  commentId: P:Coree.NETStandard.Abstractions.FluentBase.IFluentBase.IsValid
  id: IsValid
  parent: Coree.NETStandard.Abstractions.FluentBase.IFluentBase
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: IFluentBase.IsValid
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.IsValid
  type: Property
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: IsValid
    path: ../../src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
    startLine: 86
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.FluentBase
  summary: Indicates whether the current object is in a valid state.
  example: []
  syntax:
    content: bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsValid As Boolean
  overload: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.IsValid*
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ValidationErrors
  commentId: P:Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ValidationErrors
  id: ValidationErrors
  parent: Coree.NETStandard.Abstractions.FluentBase.IFluentBase
  langs:
  - csharp
  - vb
  name: ValidationErrors
  nameWithType: IFluentBase.ValidationErrors
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ValidationErrors
  type: Property
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: ValidationErrors
    path: ../../src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
    startLine: 91
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.FluentBase
  summary: A collection of exceptions that have been accumulated during operations.
  example: []
  syntax:
    content: List<Exception> ValidationErrors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Exception}
    content.vb: ReadOnly Property ValidationErrors As List(Of Exception)
  overload: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ValidationErrors*
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ContinueOnValidationError
  commentId: P:Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ContinueOnValidationError
  id: ContinueOnValidationError
  parent: Coree.NETStandard.Abstractions.FluentBase.IFluentBase
  langs:
  - csharp
  - vb
  name: ContinueOnValidationError
  nameWithType: IFluentBase.ContinueOnValidationError
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ContinueOnValidationError
  type: Property
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: ContinueOnValidationError
    path: ../../src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
    startLine: 96
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.FluentBase
  summary: Indicates whether operations should continue after a validation error has occurred.
  example: []
  syntax:
    content: bool ContinueOnValidationError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property ContinueOnValidationError As Boolean
  overload: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ContinueOnValidationError*
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.AddValidationError(System.String,System.Exception)
  commentId: M:Coree.NETStandard.Abstractions.FluentBase.IFluentBase.AddValidationError(System.String,System.Exception)
  id: AddValidationError(System.String,System.Exception)
  parent: Coree.NETStandard.Abstractions.FluentBase.IFluentBase
  langs:
  - csharp
  - vb
  name: AddValidationError(string, Exception)
  nameWithType: IFluentBase.AddValidationError(string, Exception)
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.AddValidationError(string, System.Exception)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: AddValidationError
    path: ../../src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
    startLine: 103
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.FluentBase
  summary: Adds a validation error to the collection with a custom message and the exception that occurred.
  example: []
  syntax:
    content: void AddValidationError(string message, Exception innerException)
    parameters:
    - id: message
      type: System.String
      description: The error message.
    - id: innerException
      type: System.Exception
      description: The exception that occurred during validation.
    content.vb: Sub AddValidationError(message As String, innerException As Exception)
  overload: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.AddValidationError*
  nameWithType.vb: IFluentBase.AddValidationError(String, Exception)
  fullName.vb: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.AddValidationError(String, System.Exception)
  name.vb: AddValidationError(String, Exception)
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.EnableThrowOnError
  commentId: M:Coree.NETStandard.Abstractions.FluentBase.IFluentBase.EnableThrowOnError
  id: EnableThrowOnError
  parent: Coree.NETStandard.Abstractions.FluentBase.IFluentBase
  langs:
  - csharp
  - vb
  name: EnableThrowOnError()
  nameWithType: IFluentBase.EnableThrowOnError()
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.EnableThrowOnError()
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: EnableThrowOnError
    path: ../../src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
    startLine: 110
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.FluentBase
  summary: >-
    Enables the behavior to throw exceptions immediately when a validation error occurs.

    Resets <code>ContinueOnValidationError</code> to <code>false</code>.
  example: []
  syntax:
    content: IFluentBase EnableThrowOnError()
    return:
      type: Coree.NETStandard.Abstractions.FluentBase.IFluentBase
      description: The current instance of <xref href="Coree.NETStandard.Abstractions.FluentBase.IFluentBase" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function EnableThrowOnError() As IFluentBase
  overload: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.EnableThrowOnError*
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.DisableThrowOnError(System.Boolean)
  commentId: M:Coree.NETStandard.Abstractions.FluentBase.IFluentBase.DisableThrowOnError(System.Boolean)
  id: DisableThrowOnError(System.Boolean)
  parent: Coree.NETStandard.Abstractions.FluentBase.IFluentBase
  langs:
  - csharp
  - vb
  name: DisableThrowOnError(bool)
  nameWithType: IFluentBase.DisableThrowOnError(bool)
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.DisableThrowOnError(bool)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: DisableThrowOnError
    path: ../../src/Projects/Coree.NETStandard/Abstractions/FluentBase/IFluentBase.cs
    startLine: 118
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.FluentBase
  summary: >-
    Disables the behavior of throwing exceptions immediately, allowing operations to accumulate validation errors.

    Optionally allows continuation after validation errors based on the <code class="paramref">continueOnValidationError</code> parameter.
  example: []
  syntax:
    content: IFluentBase DisableThrowOnError(bool continueOnValidationError = false)
    parameters:
    - id: continueOnValidationError
      type: System.Boolean
      description: Determines whether to continue operations after a validation error has occurred.
    return:
      type: Coree.NETStandard.Abstractions.FluentBase.IFluentBase
      description: The current instance of <xref href="Coree.NETStandard.Abstractions.FluentBase.IFluentBase" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function DisableThrowOnError(continueOnValidationError As Boolean = False) As IFluentBase
  overload: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.DisableThrowOnError*
  nameWithType.vb: IFluentBase.DisableThrowOnError(Boolean)
  fullName.vb: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.DisableThrowOnError(Boolean)
  name.vb: DisableThrowOnError(Boolean)
references:
- uid: Coree.NETStandard.Abstractions.FluentBase
  commentId: N:Coree.NETStandard.Abstractions.FluentBase
  href: Coree.html
  name: Coree.NETStandard.Abstractions.FluentBase
  nameWithType: Coree.NETStandard.Abstractions.FluentBase
  fullName: Coree.NETStandard.Abstractions.FluentBase
  spec.csharp:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Abstractions
    name: Abstractions
    href: Coree.NETStandard.Abstractions.html
  - name: .
  - uid: Coree.NETStandard.Abstractions.FluentBase
    name: FluentBase
    href: Coree.NETStandard.Abstractions.FluentBase.html
  spec.vb:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Abstractions
    name: Abstractions
    href: Coree.NETStandard.Abstractions.html
  - name: .
  - uid: Coree.NETStandard.Abstractions.FluentBase
    name: FluentBase
    href: Coree.NETStandard.Abstractions.FluentBase.html
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.IsValid*
  commentId: Overload:Coree.NETStandard.Abstractions.FluentBase.IFluentBase.IsValid
  href: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.html#Coree_NETStandard_Abstractions_FluentBase_IFluentBase_IsValid
  name: IsValid
  nameWithType: IFluentBase.IsValid
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ValidationErrors*
  commentId: Overload:Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ValidationErrors
  href: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.html#Coree_NETStandard_Abstractions_FluentBase_IFluentBase_ValidationErrors
  name: ValidationErrors
  nameWithType: IFluentBase.ValidationErrors
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ValidationErrors
- uid: System.Collections.Generic.List{System.Exception}
  commentId: T:System.Collections.Generic.List{System.Exception}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Exception>
  nameWithType: List<Exception>
  fullName: System.Collections.Generic.List<System.Exception>
  nameWithType.vb: List(Of Exception)
  fullName.vb: System.Collections.Generic.List(Of System.Exception)
  name.vb: List(Of Exception)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ContinueOnValidationError*
  commentId: Overload:Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ContinueOnValidationError
  href: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.html#Coree_NETStandard_Abstractions_FluentBase_IFluentBase_ContinueOnValidationError
  name: ContinueOnValidationError
  nameWithType: IFluentBase.ContinueOnValidationError
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.ContinueOnValidationError
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.AddValidationError*
  commentId: Overload:Coree.NETStandard.Abstractions.FluentBase.IFluentBase.AddValidationError
  href: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.html#Coree_NETStandard_Abstractions_FluentBase_IFluentBase_AddValidationError_System_String_System_Exception_
  name: AddValidationError
  nameWithType: IFluentBase.AddValidationError
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.AddValidationError
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase
  commentId: T:Coree.NETStandard.Abstractions.FluentBase.IFluentBase
  parent: Coree.NETStandard.Abstractions.FluentBase
  href: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.html
  name: IFluentBase
  nameWithType: IFluentBase
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.EnableThrowOnError*
  commentId: Overload:Coree.NETStandard.Abstractions.FluentBase.IFluentBase.EnableThrowOnError
  href: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.html#Coree_NETStandard_Abstractions_FluentBase_IFluentBase_EnableThrowOnError
  name: EnableThrowOnError
  nameWithType: IFluentBase.EnableThrowOnError
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.EnableThrowOnError
- uid: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.DisableThrowOnError*
  commentId: Overload:Coree.NETStandard.Abstractions.FluentBase.IFluentBase.DisableThrowOnError
  href: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.html#Coree_NETStandard_Abstractions_FluentBase_IFluentBase_DisableThrowOnError_System_Boolean_
  name: DisableThrowOnError
  nameWithType: IFluentBase.DisableThrowOnError
  fullName: Coree.NETStandard.Abstractions.FluentBase.IFluentBase.DisableThrowOnError
