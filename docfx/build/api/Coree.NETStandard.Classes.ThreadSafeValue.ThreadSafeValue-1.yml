### YamlMime:ManagedReference
items:
- uid: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1
  commentId: T:Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1
  id: ThreadSafeValue`1
  parent: Coree.NETStandard.Classes.ThreadSafeValue
  children:
  - Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1.#ctor(`0)
  - Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1.Value
  langs:
  - csharp
  - vb
  name: ThreadSafeValue<T>
  nameWithType: ThreadSafeValue<T>
  fullName: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue<T>
  type: Class
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Classes/ThreadSafeValue/ThreadSafeValue.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: ThreadSafeValue
    path: ../../src/Projects/Coree.NETStandard/Classes/ThreadSafeValue/ThreadSafeValue.cs
    startLine: 12
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Classes.ThreadSafeValue
  summary: Provides a thread-safe wrapper for a value of type <code class="typeparamref">T</code>.
  remarks: >-
    This class is designed to allow safe concurrent access to a value by multiple threads.

    It uses a locking mechanism to ensure that only one thread can read or modify the value at any time,

    preventing race conditions and ensuring consistency of the value across threads.

    The type <code class="typeparamref">T</code> can be either a value type or a reference type. If <code class="typeparamref">T</code> is a reference type.
  example: []
  syntax:
    content: public class ThreadSafeValue<T>
    typeParameters:
    - id: T
      description: The type of the value to be stored. This can be any type, including nullable and non-nullable types.
    content.vb: Public Class ThreadSafeValue(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ThreadSafeValue(Of T)
  fullName.vb: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue(Of T)
  name.vb: ThreadSafeValue(Of T)
- uid: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1.#ctor(`0)
  commentId: M:Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1
  langs:
  - csharp
  - vb
  name: ThreadSafeValue(T?)
  nameWithType: ThreadSafeValue<T>.ThreadSafeValue(T?)
  fullName: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue<T>.ThreadSafeValue(T?)
  type: Constructor
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Classes/ThreadSafeValue/ThreadSafeValue.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: .ctor
    path: ../../src/Projects/Coree.NETStandard/Classes/ThreadSafeValue/ThreadSafeValue.cs
    startLine: 23
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Classes.ThreadSafeValue
  summary: Initializes a new instance of the <xref href="Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue%601" data-throw-if-not-resolved="false"></xref> class, optionally with an initial value.
  example: []
  syntax:
    content: public ThreadSafeValue(T? initialValue = default)
    parameters:
    - id: initialValue
      type: '{T}'
      description: >-
        The initial value to store. Default is the default value of type <code class="typeparamref">T</code>,
            which is null for reference types and zero or the default constructor value for value types.
    content.vb: Public Sub New(initialValue As T = Nothing)
  overload: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1.#ctor*
  nameWithType.vb: ThreadSafeValue(Of T).New(T)
  fullName.vb: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue(Of T).New(T)
  name.vb: New(T)
- uid: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1.Value
  commentId: P:Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1.Value
  id: Value
  parent: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ThreadSafeValue<T>.Value
  fullName: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue<T>.Value
  type: Property
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Classes/ThreadSafeValue/ThreadSafeValue.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: Value
    path: ../../src/Projects/Coree.NETStandard/Classes/ThreadSafeValue/ThreadSafeValue.cs
    startLine: 37
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Classes.ThreadSafeValue
  summary: Gets or sets the value in a thread-safe manner.
  remarks: >-
    Access to the value is synchronized, ensuring that read and write operations are safe to use from multiple threads concurrently.

    The property getter returns the current value, and the property setter updates the value.

    Both operations are performed with thread safety in mind, using a private lock to synchronize access.
  example: []
  syntax:
    content: public T? Value { get; set; }
    parameters: []
    return:
      type: '{T}'
      description: The current value stored within the <xref href="Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue%601" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Property Value As T
  overload: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1.Value*
  nameWithType.vb: ThreadSafeValue(Of T).Value
  fullName.vb: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue(Of T).Value
references:
- uid: Coree.NETStandard.Classes.ThreadSafeValue
  commentId: N:Coree.NETStandard.Classes.ThreadSafeValue
  href: Coree.html
  name: Coree.NETStandard.Classes.ThreadSafeValue
  nameWithType: Coree.NETStandard.Classes.ThreadSafeValue
  fullName: Coree.NETStandard.Classes.ThreadSafeValue
  spec.csharp:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Classes
    name: Classes
    href: Coree.NETStandard.Classes.html
  - name: .
  - uid: Coree.NETStandard.Classes.ThreadSafeValue
    name: ThreadSafeValue
    href: Coree.NETStandard.Classes.ThreadSafeValue.html
  spec.vb:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Classes
    name: Classes
    href: Coree.NETStandard.Classes.html
  - name: .
  - uid: Coree.NETStandard.Classes.ThreadSafeValue
    name: ThreadSafeValue
    href: Coree.NETStandard.Classes.ThreadSafeValue.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1
  commentId: T:Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1
  href: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue-1.html
  name: ThreadSafeValue<T>
  nameWithType: ThreadSafeValue<T>
  fullName: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue<T>
  nameWithType.vb: ThreadSafeValue(Of T)
  fullName.vb: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue(Of T)
  name.vb: ThreadSafeValue(Of T)
  spec.csharp:
  - uid: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1
    name: ThreadSafeValue
    href: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1
    name: ThreadSafeValue
    href: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1.#ctor*
  commentId: Overload:Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1.#ctor
  href: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue-1.html#Coree_NETStandard_Classes_ThreadSafeValue_ThreadSafeValue_1__ctor__0_
  name: ThreadSafeValue
  nameWithType: ThreadSafeValue<T>.ThreadSafeValue
  fullName: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue<T>.ThreadSafeValue
  nameWithType.vb: ThreadSafeValue(Of T).New
  fullName.vb: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue(Of T).New
  name.vb: New
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1.Value*
  commentId: Overload:Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue`1.Value
  href: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue-1.html#Coree_NETStandard_Classes_ThreadSafeValue_ThreadSafeValue_1_Value
  name: Value
  nameWithType: ThreadSafeValue<T>.Value
  fullName: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue<T>.Value
  nameWithType.vb: ThreadSafeValue(Of T).Value
  fullName.vb: Coree.NETStandard.Classes.ThreadSafeValue.ThreadSafeValue(Of T).Value
