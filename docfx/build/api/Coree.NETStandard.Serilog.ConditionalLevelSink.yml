### YamlMime:ManagedReference
items:
- uid: Coree.NETStandard.Serilog.ConditionalLevelSink
  commentId: T:Coree.NETStandard.Serilog.ConditionalLevelSink
  id: ConditionalLevelSink
  parent: Coree.NETStandard.Serilog
  children:
  - Coree.NETStandard.Serilog.ConditionalLevelSink.#ctor(Serilog.Core.ILogEventSink,System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel})
  - Coree.NETStandard.Serilog.ConditionalLevelSink.Emit(Serilog.Events.LogEvent)
  langs:
  - csharp
  - vb
  name: ConditionalLevelSink
  nameWithType: ConditionalLevelSink
  fullName: Coree.NETStandard.Serilog.ConditionalLevelSink
  type: Class
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Serilog/ConditionalLevelSink.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: ConditionalLevelSink
    path: ../../src/Projects/Coree.NETStandard/Serilog/ConditionalLevelSink.cs
    startLine: 15
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Serilog
  summary: A custom log event sink that conditionally changes the log event level based on predefined criteria.
  remarks: This sink wraps another log event sink and delegates the emission of log events to it, potentially with modified log event levels.
  example: []
  syntax:
    content: 'public class ConditionalLevelSink : ILogEventSink'
    content.vb: Public Class ConditionalLevelSink Implements ILogEventSink
  inheritance:
  - System.Object
  implements:
  - Serilog.Core.ILogEventSink
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Coree.NETStandard.Serilog.ConditionalLevelSink.#ctor(Serilog.Core.ILogEventSink,System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel})
  commentId: M:Coree.NETStandard.Serilog.ConditionalLevelSink.#ctor(Serilog.Core.ILogEventSink,System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel})
  id: '#ctor(Serilog.Core.ILogEventSink,System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel})'
  parent: Coree.NETStandard.Serilog.ConditionalLevelSink
  langs:
  - csharp
  - vb
  name: ConditionalLevelSink(ILogEventSink, Dictionary<string, LogEventLevel>?)
  nameWithType: ConditionalLevelSink.ConditionalLevelSink(ILogEventSink, Dictionary<string, LogEventLevel>?)
  fullName: Coree.NETStandard.Serilog.ConditionalLevelSink.ConditionalLevelSink(Serilog.Core.ILogEventSink, System.Collections.Generic.Dictionary<string, Serilog.Events.LogEventLevel>?)
  type: Constructor
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Serilog/ConditionalLevelSink.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: .ctor
    path: ../../src/Projects/Coree.NETStandard/Serilog/ConditionalLevelSink.cs
    startLine: 26
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Serilog
  summary: Initializes a new instance of the ConditionalLevelSink class.
  example: []
  syntax:
    content: public ConditionalLevelSink(ILogEventSink innerSink, Dictionary<string, LogEventLevel>? conditionalLevel)
    parameters:
    - id: innerSink
      type: Serilog.Core.ILogEventSink
      description: The inner sink to which log events will be forwarded.
    - id: conditionalLevel
      type: System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel}
      description: A dictionary mapping specific criteria to log event levels.
    content.vb: Public Sub New(innerSink As ILogEventSink, conditionalLevel As Dictionary(Of String, LogEventLevel))
  overload: Coree.NETStandard.Serilog.ConditionalLevelSink.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when innerSink is null.
  nameWithType.vb: ConditionalLevelSink.New(ILogEventSink, Dictionary(Of String, LogEventLevel))
  fullName.vb: Coree.NETStandard.Serilog.ConditionalLevelSink.New(Serilog.Core.ILogEventSink, System.Collections.Generic.Dictionary(Of String, Serilog.Events.LogEventLevel))
  name.vb: New(ILogEventSink, Dictionary(Of String, LogEventLevel))
- uid: Coree.NETStandard.Serilog.ConditionalLevelSink.Emit(Serilog.Events.LogEvent)
  commentId: M:Coree.NETStandard.Serilog.ConditionalLevelSink.Emit(Serilog.Events.LogEvent)
  id: Emit(Serilog.Events.LogEvent)
  parent: Coree.NETStandard.Serilog.ConditionalLevelSink
  langs:
  - csharp
  - vb
  name: Emit(LogEvent)
  nameWithType: ConditionalLevelSink.Emit(LogEvent)
  fullName: Coree.NETStandard.Serilog.ConditionalLevelSink.Emit(Serilog.Events.LogEvent)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Serilog/ConditionalLevelSink.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: Emit
    path: ../../src/Projects/Coree.NETStandard/Serilog/ConditionalLevelSink.cs
    startLine: 39
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Serilog
  summary: Processes and potentially modifies a log event before forwarding it to the inner sink.
  remarks: If a matching criterion is found in the conditionalLevel dictionary, the log event's level is modified accordingly before it is forwarded.
  example: []
  syntax:
    content: public void Emit(LogEvent logEvent)
    parameters:
    - id: logEvent
      type: Serilog.Events.LogEvent
      description: The log event to be emitted.
    content.vb: Public Sub Emit(logEvent As LogEvent)
  overload: Coree.NETStandard.Serilog.ConditionalLevelSink.Emit*
  implements:
  - Serilog.Core.ILogEventSink.Emit(Serilog.Events.LogEvent)
references:
- uid: Coree.NETStandard.Serilog
  commentId: N:Coree.NETStandard.Serilog
  href: Coree.html
  name: Coree.NETStandard.Serilog
  nameWithType: Coree.NETStandard.Serilog
  fullName: Coree.NETStandard.Serilog
  spec.csharp:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Serilog
    name: Serilog
    href: Coree.NETStandard.Serilog.html
  spec.vb:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Serilog
    name: Serilog
    href: Coree.NETStandard.Serilog.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Serilog.Core.ILogEventSink
  commentId: T:Serilog.Core.ILogEventSink
  parent: Serilog.Core
  isExternal: true
  name: ILogEventSink
  nameWithType: ILogEventSink
  fullName: Serilog.Core.ILogEventSink
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Serilog.Core
  commentId: N:Serilog.Core
  isExternal: true
  name: Serilog.Core
  nameWithType: Serilog.Core
  fullName: Serilog.Core
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Core
    name: Core
    isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Coree.NETStandard.Serilog.ConditionalLevelSink.#ctor*
  commentId: Overload:Coree.NETStandard.Serilog.ConditionalLevelSink.#ctor
  href: Coree.NETStandard.Serilog.ConditionalLevelSink.html#Coree_NETStandard_Serilog_ConditionalLevelSink__ctor_Serilog_Core_ILogEventSink_System_Collections_Generic_Dictionary_System_String_Serilog_Events_LogEventLevel__
  name: ConditionalLevelSink
  nameWithType: ConditionalLevelSink.ConditionalLevelSink
  fullName: Coree.NETStandard.Serilog.ConditionalLevelSink.ConditionalLevelSink
  nameWithType.vb: ConditionalLevelSink.New
  fullName.vb: Coree.NETStandard.Serilog.ConditionalLevelSink.New
  name.vb: New
- uid: System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, LogEventLevel>
  nameWithType: Dictionary<string, LogEventLevel>
  fullName: System.Collections.Generic.Dictionary<string, Serilog.Events.LogEventLevel>
  nameWithType.vb: Dictionary(Of String, LogEventLevel)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Serilog.Events.LogEventLevel)
  name.vb: Dictionary(Of String, LogEventLevel)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Coree.NETStandard.Serilog.ConditionalLevelSink.Emit*
  commentId: Overload:Coree.NETStandard.Serilog.ConditionalLevelSink.Emit
  href: Coree.NETStandard.Serilog.ConditionalLevelSink.html#Coree_NETStandard_Serilog_ConditionalLevelSink_Emit_Serilog_Events_LogEvent_
  name: Emit
  nameWithType: ConditionalLevelSink.Emit
  fullName: Coree.NETStandard.Serilog.ConditionalLevelSink.Emit
- uid: Serilog.Core.ILogEventSink.Emit(Serilog.Events.LogEvent)
  commentId: M:Serilog.Core.ILogEventSink.Emit(Serilog.Events.LogEvent)
  parent: Serilog.Core.ILogEventSink
  isExternal: true
  name: Emit(LogEvent)
  nameWithType: ILogEventSink.Emit(LogEvent)
  fullName: Serilog.Core.ILogEventSink.Emit(Serilog.Events.LogEvent)
  spec.csharp:
  - uid: Serilog.Core.ILogEventSink.Emit(Serilog.Events.LogEvent)
    name: Emit
    isExternal: true
  - name: (
  - uid: Serilog.Events.LogEvent
    name: LogEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: Serilog.Core.ILogEventSink.Emit(Serilog.Events.LogEvent)
    name: Emit
    isExternal: true
  - name: (
  - uid: Serilog.Events.LogEvent
    name: LogEvent
    isExternal: true
  - name: )
- uid: Serilog.Events.LogEvent
  commentId: T:Serilog.Events.LogEvent
  parent: Serilog.Events
  isExternal: true
  name: LogEvent
  nameWithType: LogEvent
  fullName: Serilog.Events.LogEvent
- uid: Serilog.Events
  commentId: N:Serilog.Events
  isExternal: true
  name: Serilog.Events
  nameWithType: Serilog.Events
  fullName: Serilog.Events
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Events
    name: Events
    isExternal: true
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Events
    name: Events
    isExternal: true
