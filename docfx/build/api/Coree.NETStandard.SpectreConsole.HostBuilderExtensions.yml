### YamlMime:ManagedReference
items:
- uid: Coree.NETStandard.SpectreConsole.HostBuilderExtensions
  commentId: T:Coree.NETStandard.SpectreConsole.HostBuilderExtensions
  id: HostBuilderExtensions
  parent: Coree.NETStandard.SpectreConsole
  children:
  - Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsole(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  - Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsoleSyncCommandExecutor(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  langs:
  - csharp
  - vb
  name: HostBuilderExtensions
  nameWithType: HostBuilderExtensions
  fullName: Coree.NETStandard.SpectreConsole.HostBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Projects/Coree.NETStandard/SpectreConsole/HostBuilderExtensions.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: HostBuilderExtensions
    path: ../../src/Projects/Coree.NETStandard/SpectreConsole/HostBuilderExtensions.cs
    startLine: 13
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.SpectreConsole
  summary: Provides extension methods for <xref href="Microsoft.Extensions.Hosting.IHostBuilder" data-throw-if-not-resolved="false"></xref> to facilitate the integration of Spectre.Console's CommandApp into the application's host builder.
  example: []
  syntax:
    content: public static class HostBuilderExtensions
    content.vb: Public Module HostBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsole(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  commentId: M:Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsole(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  id: UseSpectreConsole(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  isExtensionMethod: true
  parent: Coree.NETStandard.SpectreConsole.HostBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseSpectreConsole(IHostBuilder, Action<IConfigurator>, bool)
  nameWithType: HostBuilderExtensions.UseSpectreConsole(IHostBuilder, Action<IConfigurator>, bool)
  fullName: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsole(Microsoft.Extensions.Hosting.IHostBuilder, System.Action<Spectre.Console.Cli.IConfigurator>, bool)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/SpectreConsole/HostBuilderExtensions.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: UseSpectreConsole
    path: ../../src/Projects/Coree.NETStandard/SpectreConsole/HostBuilderExtensions.cs
    startLine: 75
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.SpectreConsole
  summary: >-
    Configures the application's host builder to use Spectre.Console's <xref href="Spectre.Console.Cli.CommandApp" data-throw-if-not-resolved="false"></xref> and related services.

    This setup enables the application to utilize Spectre.Console's command line interface tools,

    allowing for the definition, parsing, and execution of commands within a .NET Core application.
  remarks: >-
    This method performs the following operations:

    - Creates and configures a new instance of <xref href="Spectre.Console.Cli.CommandApp" data-throw-if-not-resolved="false"></xref> using the provided <code class="paramref">configureCommandApp</code> action.

    - Scans for command types within the <xref href="Spectre.Console.Cli.CommandApp" data-throw-if-not-resolved="false"></xref> and registers them as singletons in the service collection.

    - Registers the <xref href="Spectre.Console.Cli.CommandApp" data-throw-if-not-resolved="false"></xref> as a singleton service, configured to use a <xref href="Coree.NETStandard.SpectreConsole.SpectreConsoleTypeRegistrar" data-throw-if-not-resolved="false"></xref> for dependency injection.

    - Adds a <xref href="Coree.NETStandard.SpectreConsole.SpectreConsoleHostedService" data-throw-if-not-resolved="false"></xref> to the services collection to manage the lifecycle of the <xref href="Spectre.Console.Cli.CommandApp" data-throw-if-not-resolved="false"></xref> within the host application.

    <example>

    <pre><code class="lang-csharp">static async Task Main(string[] args)

    {
        var builder = Host.CreateDefaultBuilder(args);
        builder.ConfigureServices(services =&gt;
        {
            services.AddSingleton&lt;ISomeServiceDependency, SomeServiceDependency&gt;();
            services.AddHostedService&lt;SomeOtherBackgroundService&gt;();
        });
        builder.UseSpectreConsole(configCommandApp =&gt;
        {
            configCommandApp.SetApplicationName("testapp");
            configCommandApp.AddCommand&lt;MyAsyncCommand&gt;("my-command");
        });
        await builder.Build().RunAsync();
    }


    public class MyAsyncCommand : AsyncCommand&lt;MyAsyncCommand.Settings&gt;

    {
        private readonly ISomeServiceDependency dependencyService; private readonly IHostApplicationLifetime appLifetime;

        public MyAsyncCommand(ISomeServiceDependency dependencyService, IHostApplicationLifetime appLifetime)
        {
            this.dependencyService = dependencyService; this.appLifetime = appLifetime;
        }

        public class Settings : CommandSettings
        {
            [Description("The commandline setting")]
            [CommandArgument(0, "&lt;Setting&gt;")]
            public string? SomeSetting { get; init; }
        }

        public override async Task&lt;int&gt; ExecuteAsync(CommandContext context, Settings settings)
        {
            try { await dependencyService.PerformConsoleAction(appLifetime.ApplicationStopping); }
            catch (Exception) { return (int)SpectreConsoleHostedService.ExitCode.CommandTerminated; }
            return (int)SpectreConsoleHostedService.ExitCode.SuccessAndContinue;
        }
    }</code></pre>

    </example>
  example: []
  syntax:
    content: public static IHostBuilder UseSpectreConsole(this IHostBuilder builder, Action<IConfigurator> configureCommandApp, bool suppressLifeTimeStatusMessages = true)
    parameters:
    - id: builder
      type: Microsoft.Extensions.Hosting.IHostBuilder
      description: The <xref href="Microsoft.Extensions.Hosting.IHostBuilder" data-throw-if-not-resolved="false"></xref> to configure.
    - id: configureCommandApp
      type: System.Action{Spectre.Console.Cli.IConfigurator}
      description: An <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> delegate that configures the <xref href="Spectre.Console.Cli.CommandApp" data-throw-if-not-resolved="false"></xref>.
    - id: suppressLifeTimeStatusMessages
      type: System.Boolean
      description: Supresses default output of the application host.
    return:
      type: Microsoft.Extensions.Hosting.IHostBuilder
      description: The <xref href="Microsoft.Extensions.Hosting.IHostBuilder" data-throw-if-not-resolved="false"></xref> so that additional configuration calls can be chained.
    content.vb: Public Shared Function UseSpectreConsole(builder As IHostBuilder, configureCommandApp As Action(Of IConfigurator), suppressLifeTimeStatusMessages As Boolean = True) As IHostBuilder
  overload: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">builder</code> is null.
  nameWithType.vb: HostBuilderExtensions.UseSpectreConsole(IHostBuilder, Action(Of IConfigurator), Boolean)
  fullName.vb: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsole(Microsoft.Extensions.Hosting.IHostBuilder, System.Action(Of Spectre.Console.Cli.IConfigurator), Boolean)
  name.vb: UseSpectreConsole(IHostBuilder, Action(Of IConfigurator), Boolean)
- uid: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsoleSyncCommandExecutor(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  commentId: M:Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsoleSyncCommandExecutor(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  id: UseSpectreConsoleSyncCommandExecutor(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  isExtensionMethod: true
  parent: Coree.NETStandard.SpectreConsole.HostBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseSpectreConsoleSyncCommandExecutor(IHostBuilder, Action<IConfigurator>, bool)
  nameWithType: HostBuilderExtensions.UseSpectreConsoleSyncCommandExecutor(IHostBuilder, Action<IConfigurator>, bool)
  fullName: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsoleSyncCommandExecutor(Microsoft.Extensions.Hosting.IHostBuilder, System.Action<Spectre.Console.Cli.IConfigurator>, bool)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/SpectreConsole/HostBuilderExtensions.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: UseSpectreConsoleSyncCommandExecutor
    path: ../../src/Projects/Coree.NETStandard/SpectreConsole/HostBuilderExtensions.cs
    startLine: 172
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.SpectreConsole
  summary: >-
    Sets up a command execution environment within the application's host configuration, where commands are executed synchronously.

    This method creates an entry point for a command-line application that supports multiple commands, each running in a synchronous manner within its own task context.

    In the event of a service cancellation, the currently executing command will be terminated abruptly.
  remarks: >-
    <example>

    <pre><code class="lang-csharp">static async Task Main(string[] args)

    {
        var builder = Host.CreateDefaultBuilder(args);
        builder.ConfigureServices(services =&gt;
        {
            services.AddSingleton&lt;ISomeServiceDependency, SomeServiceDependency&gt;();
            services.AddHostedService&lt;SomeOtherBackgroundService&gt;();
        });
        builder.UseSpectreConsoleSyncCommandExecutor(configCommandApp =&gt;
        {
            configCommandApp.SetApplicationName("testapp");
            configCommandApp.AddCommand&lt;MyAsyncCommand&gt;("my-command");
        });
        await builder.Build().RunAsync();
    }


    public class MyAsyncCommand : AsyncCommand&lt;MyAsyncCommand.Settings&gt;

    {
        private readonly ISomeServiceDependency dependencyService;
        private readonly IHostApplicationLifetime appLifetime;

        public MyAsyncCommand(ISomeServiceDependency dependencyService, IHostApplicationLifetime appLifetime)
        {
            this.dependencyService = dependencyService;
            this.appLifetime = appLifetime;
        }

        public class Settings : CommandSettings
        {
            [Description("The commandline setting")]
            [CommandArgument(0, "<Setting>")]
            public string? SomeSetting { get; init; }
        }

        public override async Task<int> ExecuteAsync(CommandContext context, Settings settings)
        {
            // Attempts to abort the command gracefully will fail because the command runs on a separate task and not in the service host's managed context.
            try {
                await dependencyService.PerformConsoleAction(appLifetime.ApplicationStopping);
            }
            catch (Exception)
            {
                // This catch block is unreachable. The service host's abrupt termination of the command prevents this block from being executed.
                return (int)SpectreConsoleHostedService.ExitCode.CommandTerminated;
            }
            // It's crucial to explicitly manage the service host's state after command execution completes, either continuing operation or initiating shutdown.
            return (int)SpectreConsoleHostedService.ExitCode.SuccessAndContinue;
        }
    }</code></pre>

    </example>
  example: []
  syntax:
    content: public static IHostBuilder UseSpectreConsoleSyncCommandExecutor(this IHostBuilder builder, Action<IConfigurator> configureCommandApp, bool suppressLifeTimeStatusMessages = true)
    parameters:
    - id: builder
      type: Microsoft.Extensions.Hosting.IHostBuilder
      description: The host builder to configure, which is augmented with services and configurations necessary for managing command execution.
    - id: configureCommandApp
      type: System.Action{Spectre.Console.Cli.IConfigurator}
      description: A delegate that configures the command-line application, facilitating the registration and setup of individual commands.
    - id: suppressLifeTimeStatusMessages
      type: System.Boolean
      description: Optional. Determines whether to suppress host lifetime status messages, with a default value of true. When set to false, these messages are made visible, offering insights into the lifecycle events of the host.
    return:
      type: Microsoft.Extensions.Hosting.IHostBuilder
      description: The host builder, now configured with the synchronous command execution environment, ready for further configuration or immediate use.
    content.vb: Public Shared Function UseSpectreConsoleSyncCommandExecutor(builder As IHostBuilder, configureCommandApp As Action(Of IConfigurator), suppressLifeTimeStatusMessages As Boolean = True) As IHostBuilder
  overload: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsoleSyncCommandExecutor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the provided host builder is null, ensuring method reliability and preventing null reference errors.
  nameWithType.vb: HostBuilderExtensions.UseSpectreConsoleSyncCommandExecutor(IHostBuilder, Action(Of IConfigurator), Boolean)
  fullName.vb: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsoleSyncCommandExecutor(Microsoft.Extensions.Hosting.IHostBuilder, System.Action(Of Spectre.Console.Cli.IConfigurator), Boolean)
  name.vb: UseSpectreConsoleSyncCommandExecutor(IHostBuilder, Action(Of IConfigurator), Boolean)
references:
- uid: Microsoft.Extensions.Hosting.IHostBuilder
  commentId: T:Microsoft.Extensions.Hosting.IHostBuilder
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostbuilder
  name: IHostBuilder
  nameWithType: IHostBuilder
  fullName: Microsoft.Extensions.Hosting.IHostBuilder
- uid: Coree.NETStandard.SpectreConsole
  commentId: N:Coree.NETStandard.SpectreConsole
  href: Coree.html
  name: Coree.NETStandard.SpectreConsole
  nameWithType: Coree.NETStandard.SpectreConsole
  fullName: Coree.NETStandard.SpectreConsole
  spec.csharp:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.SpectreConsole
    name: SpectreConsole
    href: Coree.NETStandard.SpectreConsole.html
  spec.vb:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.SpectreConsole
    name: SpectreConsole
    href: Coree.NETStandard.SpectreConsole.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Spectre.Console.Cli.CommandApp
  commentId: T:Spectre.Console.Cli.CommandApp
  isExternal: true
  name: CommandApp
  nameWithType: CommandApp
  fullName: Spectre.Console.Cli.CommandApp
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Coree.NETStandard.SpectreConsole.SpectreConsoleTypeRegistrar
  commentId: T:Coree.NETStandard.SpectreConsole.SpectreConsoleTypeRegistrar
  href: Coree.NETStandard.SpectreConsole.SpectreConsoleTypeRegistrar.html
  name: SpectreConsoleTypeRegistrar
  nameWithType: SpectreConsoleTypeRegistrar
  fullName: Coree.NETStandard.SpectreConsole.SpectreConsoleTypeRegistrar
- uid: Coree.NETStandard.SpectreConsole.SpectreConsoleHostedService
  commentId: T:Coree.NETStandard.SpectreConsole.SpectreConsoleHostedService
  href: Coree.NETStandard.SpectreConsole.SpectreConsoleHostedService.html
  name: SpectreConsoleHostedService
  nameWithType: SpectreConsoleHostedService
  fullName: Coree.NETStandard.SpectreConsole.SpectreConsoleHostedService
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsole*
  commentId: Overload:Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsole
  href: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.html#Coree_NETStandard_SpectreConsole_HostBuilderExtensions_UseSpectreConsole_Microsoft_Extensions_Hosting_IHostBuilder_System_Action_Spectre_Console_Cli_IConfigurator__System_Boolean_
  name: UseSpectreConsole
  nameWithType: HostBuilderExtensions.UseSpectreConsole
  fullName: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsole
- uid: System.Action{Spectre.Console.Cli.IConfigurator}
  commentId: T:System.Action{Spectre.Console.Cli.IConfigurator}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IConfigurator>
  nameWithType: Action<IConfigurator>
  fullName: System.Action<Spectre.Console.Cli.IConfigurator>
  nameWithType.vb: Action(Of IConfigurator)
  fullName.vb: System.Action(Of Spectre.Console.Cli.IConfigurator)
  name.vb: Action(Of IConfigurator)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Spectre.Console.Cli.IConfigurator
    name: IConfigurator
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Spectre.Console.Cli.IConfigurator
    name: IConfigurator
    isExternal: true
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsoleSyncCommandExecutor*
  commentId: Overload:Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsoleSyncCommandExecutor
  href: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.html#Coree_NETStandard_SpectreConsole_HostBuilderExtensions_UseSpectreConsoleSyncCommandExecutor_Microsoft_Extensions_Hosting_IHostBuilder_System_Action_Spectre_Console_Cli_IConfigurator__System_Boolean_
  name: UseSpectreConsoleSyncCommandExecutor
  nameWithType: HostBuilderExtensions.UseSpectreConsoleSyncCommandExecutor
  fullName: Coree.NETStandard.SpectreConsole.HostBuilderExtensions.UseSpectreConsoleSyncCommandExecutor
