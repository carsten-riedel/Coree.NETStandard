### YamlMime:ManagedReference
items:
- uid: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1
  commentId: T:Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1
  id: ServiceFactory`1
  parent: Coree.NETStandard.Abstractions.ServiceFactory
  children:
  - Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory
  - Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory(Microsoft.Extensions.Logging.LogLevel)
  - Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  - Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Action{Microsoft.Extensions.Logging.ILoggingBuilder},System.Action{Microsoft.Extensions.Hosting.IHostBuilder})
  - Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory(System.Action{Microsoft.Extensions.Hosting.IHostBuilder})
  - Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.Dispose
  langs:
  - csharp
  - vb
  name: ServiceFactory<T>
  nameWithType: ServiceFactory<T>
  fullName: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory<T>
  type: Class
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: ServiceFactory
    path: ../../src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
    startLine: 46
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.ServiceFactory
  summary: >-
    Represents a generic abstract factory for creating and managing service instances of type <code class="typeparamref">T</code>.

    This factory leverages dependency injection and configuration patterns to facilitate the creation and lifecycle management of services.
  remarks: >-
    The <xref href="Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory%601" data-throw-if-not-resolved="false"></xref> serves as a foundational component in applications requiring robust and configurable service instantiation.

    It abstracts the complexity involved in the instantiation and management of services, thereby promoting a clean and maintainable architecture.

    This class should be inherited by specific service factory implementations that can provide concrete and custom instantiation logic.

    <example>

    The following example shows how to use the FileService in a console application:

    <pre><code class="lang-csharp">private static async Task Main(string[] args)

    {
        // Creating a FileService instance without params nullable ILogger.
        var fileService1 = new FileService();
        // Creating a FileService instance using the constructor that accepts an ILogger.
        var fileService2 = new FileService(new Logger&lt;FileService&gt;());
        // Creating a FileService instance using the factory method.
        var fileService3 = FileService.CreateServiceFactory();

        // Example method calls on fileService instances
        await fileService1.SomeFileOperationAsync();
        await fileService2.SomeFileOperationAsync();
        fileService3.SomeFileOperation();
    }


    public partial class FileService : ServiceFactory&lt;FileService&gt;, IFileService

    {
       private readonly ILogger&lt;FileService&gt;? _logger;
       public FileService(ILogger&lt; FileService&gt;? logger = null)
       {
          this._logger = logger;
       }
    }</code></pre>

    </example>
  example: []
  syntax:
    content: 'public abstract class ServiceFactory<T> : IDisposable where T : class'
    typeParameters:
    - id: T
      description: The type of service to be created and managed. This type must be a class that implements IDisposable.
    content.vb: Public MustInherit Class ServiceFactory(Of T As Class) Implements IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - Coree.NETStandard.Services.DebugService.DebugService
  - Coree.NETStandard.Services.FileService.FileService
  - Coree.NETStandard.Services.ProcessService.ProcessService
  - Coree.NETStandard.Services.RuntimeInsightsService.RuntimeInsightsService
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ServiceFactory(Of T)
  fullName.vb: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory(Of T)
  name.vb: ServiceFactory(Of T)
- uid: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory(System.Action{Microsoft.Extensions.Hosting.IHostBuilder})
  commentId: M:Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory(System.Action{Microsoft.Extensions.Hosting.IHostBuilder})
  id: CreateServiceFactory(System.Action{Microsoft.Extensions.Hosting.IHostBuilder})
  parent: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1
  langs:
  - csharp
  - vb
  name: CreateServiceFactory(Action<IHostBuilder>?)
  nameWithType: ServiceFactory<T>.CreateServiceFactory(Action<IHostBuilder>?)
  fullName: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory<T>.CreateServiceFactory(System.Action<Microsoft.Extensions.Hosting.IHostBuilder>?)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: CreateServiceFactory
    path: ../../src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
    startLine: 56
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.ServiceFactory
  summary: Creates a service instance with optional host configuration.
  example: []
  syntax:
    content: public static T CreateServiceFactory(Action<IHostBuilder>? configureHost = null)
    parameters:
    - id: configureHost
      type: System.Action{Microsoft.Extensions.Hosting.IHostBuilder}
      description: An action to configure the host. Can be null.
    return:
      type: '{T}'
      description: A new instance of type <code class="typeparamref">T</code>.
    content.vb: Public Shared Function CreateServiceFactory(configureHost As Action(Of IHostBuilder) = Nothing) As T
  overload: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory*
  nameWithType.vb: ServiceFactory(Of T).CreateServiceFactory(Action(Of IHostBuilder))
  fullName.vb: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory(Of T).CreateServiceFactory(System.Action(Of Microsoft.Extensions.Hosting.IHostBuilder))
  name.vb: CreateServiceFactory(Action(Of IHostBuilder))
- uid: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  commentId: M:Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  id: CreateServiceFactory(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  parent: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1
  langs:
  - csharp
  - vb
  name: CreateServiceFactory(Action<IServiceCollection>?)
  nameWithType: ServiceFactory<T>.CreateServiceFactory(Action<IServiceCollection>?)
  fullName: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory<T>.CreateServiceFactory(System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>?)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: CreateServiceFactory
    path: ../../src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
    startLine: 66
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.ServiceFactory
  summary: Creates a service instance with optional service collection configuration.
  example: []
  syntax:
    content: public static T CreateServiceFactory(Action<IServiceCollection>? services = null)
    parameters:
    - id: services
      type: System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection}
      description: An action to configure the services. Can be null.
    return:
      type: '{T}'
      description: A new instance of type <code class="typeparamref">T</code>.
    content.vb: Public Shared Function CreateServiceFactory(services As Action(Of IServiceCollection) = Nothing) As T
  overload: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory*
  nameWithType.vb: ServiceFactory(Of T).CreateServiceFactory(Action(Of IServiceCollection))
  fullName.vb: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory(Of T).CreateServiceFactory(System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection))
  name.vb: CreateServiceFactory(Action(Of IServiceCollection))
- uid: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Action{Microsoft.Extensions.Logging.ILoggingBuilder},System.Action{Microsoft.Extensions.Hosting.IHostBuilder})
  commentId: M:Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Action{Microsoft.Extensions.Logging.ILoggingBuilder},System.Action{Microsoft.Extensions.Hosting.IHostBuilder})
  id: CreateServiceFactory(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Action{Microsoft.Extensions.Logging.ILoggingBuilder},System.Action{Microsoft.Extensions.Hosting.IHostBuilder})
  parent: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1
  langs:
  - csharp
  - vb
  name: CreateServiceFactory(Action<IServiceCollection>?, Action<ILoggingBuilder>?, Action<IHostBuilder>?)
  nameWithType: ServiceFactory<T>.CreateServiceFactory(Action<IServiceCollection>?, Action<ILoggingBuilder>?, Action<IHostBuilder>?)
  fullName: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory<T>.CreateServiceFactory(System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>?, System.Action<Microsoft.Extensions.Logging.ILoggingBuilder>?, System.Action<Microsoft.Extensions.Hosting.IHostBuilder>?)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: CreateServiceFactory
    path: ../../src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
    startLine: 78
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.ServiceFactory
  summary: Creates a service instance with optional configurations for services, logging, and host.
  example: []
  syntax:
    content: public static T CreateServiceFactory(Action<IServiceCollection>? configureServices = null, Action<ILoggingBuilder>? configureLogging = null, Action<IHostBuilder>? configureHost = null)
    parameters:
    - id: configureServices
      type: System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection}
      description: An action to configure the services. Can be null.
    - id: configureLogging
      type: System.Action{Microsoft.Extensions.Logging.ILoggingBuilder}
      description: An action to configure the logging. Can be null.
    - id: configureHost
      type: System.Action{Microsoft.Extensions.Hosting.IHostBuilder}
      description: An action to configure the host. Can be null.
    return:
      type: '{T}'
      description: A new instance of type <code class="typeparamref">T</code>.
    content.vb: Public Shared Function CreateServiceFactory(configureServices As Action(Of IServiceCollection) = Nothing, configureLogging As Action(Of ILoggingBuilder) = Nothing, configureHost As Action(Of IHostBuilder) = Nothing) As T
  overload: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory*
  nameWithType.vb: ServiceFactory(Of T).CreateServiceFactory(Action(Of IServiceCollection), Action(Of ILoggingBuilder), Action(Of IHostBuilder))
  fullName.vb: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory(Of T).CreateServiceFactory(System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection), System.Action(Of Microsoft.Extensions.Logging.ILoggingBuilder), System.Action(Of Microsoft.Extensions.Hosting.IHostBuilder))
  name.vb: CreateServiceFactory(Action(Of IServiceCollection), Action(Of ILoggingBuilder), Action(Of IHostBuilder))
- uid: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory
  commentId: M:Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory
  id: CreateServiceFactory
  parent: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1
  langs:
  - csharp
  - vb
  name: CreateServiceFactory()
  nameWithType: ServiceFactory<T>.CreateServiceFactory()
  fullName: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory<T>.CreateServiceFactory()
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: CreateServiceFactory
    path: ../../src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
    startLine: 91
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.ServiceFactory
  summary: Creates a service instance with a default logging level set to Trace.
  remarks: >-
    This method simplifies the creation of a service instance by applying a default Trace logging level.

    It delegates to another factory method, providing a standardized logging setup for basic tracing of application activities.
  example: []
  syntax:
    content: public static T CreateServiceFactory()
    return:
      type: '{T}'
      description: A new instance of type <code class="typeparamref">T</code> with default logging configuration.
    content.vb: Public Shared Function CreateServiceFactory() As T
  overload: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory*
  nameWithType.vb: ServiceFactory(Of T).CreateServiceFactory()
  fullName.vb: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory(Of T).CreateServiceFactory()
- uid: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory(Microsoft.Extensions.Logging.LogLevel)
  id: CreateServiceFactory(Microsoft.Extensions.Logging.LogLevel)
  parent: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1
  langs:
  - csharp
  - vb
  name: CreateServiceFactory(LogLevel)
  nameWithType: ServiceFactory<T>.CreateServiceFactory(LogLevel)
  fullName: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory<T>.CreateServiceFactory(Microsoft.Extensions.Logging.LogLevel)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: CreateServiceFactory
    path: ../../src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
    startLine: 101
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.ServiceFactory
  summary: Creates a service instance with a default logging level.
  example: []
  syntax:
    content: public static T CreateServiceFactory(LogLevel logLevel)
    parameters:
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
      description: The logging level to be used as default.
    return:
      type: '{T}'
      description: A new instance of type <code class="typeparamref">T</code>.
    content.vb: Public Shared Function CreateServiceFactory(logLevel As LogLevel) As T
  overload: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory*
  nameWithType.vb: ServiceFactory(Of T).CreateServiceFactory(LogLevel)
  fullName.vb: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory(Of T).CreateServiceFactory(Microsoft.Extensions.Logging.LogLevel)
- uid: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.Dispose
  commentId: M:Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.Dispose
  id: Dispose
  parent: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ServiceFactory<T>.Dispose()
  fullName: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory<T>.Dispose()
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: Dispose
    path: ../../src/Projects/Coree.NETStandard/Abstractions/ServiceFactory/ServiceFactory.cs
    startLine: 182
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.ServiceFactory
  summary: Disposes the static instance of the host if it has been created.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: ServiceFactory(Of T).Dispose()
  fullName.vb: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory(Of T).Dispose()
references:
- uid: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1
  commentId: T:Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1
  href: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory-1.html
  name: ServiceFactory<T>
  nameWithType: ServiceFactory<T>
  fullName: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory<T>
  nameWithType.vb: ServiceFactory(Of T)
  fullName.vb: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory(Of T)
  name.vb: ServiceFactory(Of T)
  spec.csharp:
  - uid: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1
    name: ServiceFactory
    href: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1
    name: ServiceFactory
    href: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Coree.NETStandard.Abstractions.ServiceFactory
  commentId: N:Coree.NETStandard.Abstractions.ServiceFactory
  href: Coree.html
  name: Coree.NETStandard.Abstractions.ServiceFactory
  nameWithType: Coree.NETStandard.Abstractions.ServiceFactory
  fullName: Coree.NETStandard.Abstractions.ServiceFactory
  spec.csharp:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Abstractions
    name: Abstractions
    href: Coree.NETStandard.Abstractions.html
  - name: .
  - uid: Coree.NETStandard.Abstractions.ServiceFactory
    name: ServiceFactory
    href: Coree.NETStandard.Abstractions.ServiceFactory.html
  spec.vb:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Abstractions
    name: Abstractions
    href: Coree.NETStandard.Abstractions.html
  - name: .
  - uid: Coree.NETStandard.Abstractions.ServiceFactory
    name: ServiceFactory
    href: Coree.NETStandard.Abstractions.ServiceFactory.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory*
  commentId: Overload:Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.CreateServiceFactory
  href: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory-1.html#Coree_NETStandard_Abstractions_ServiceFactory_ServiceFactory_1_CreateServiceFactory_System_Action_Microsoft_Extensions_Hosting_IHostBuilder__
  name: CreateServiceFactory
  nameWithType: ServiceFactory<T>.CreateServiceFactory
  fullName: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory<T>.CreateServiceFactory
  nameWithType.vb: ServiceFactory(Of T).CreateServiceFactory
  fullName.vb: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory(Of T).CreateServiceFactory
- uid: System.Action{Microsoft.Extensions.Hosting.IHostBuilder}
  commentId: T:System.Action{Microsoft.Extensions.Hosting.IHostBuilder}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IHostBuilder>
  nameWithType: Action<IHostBuilder>
  fullName: System.Action<Microsoft.Extensions.Hosting.IHostBuilder>
  nameWithType.vb: Action(Of IHostBuilder)
  fullName.vb: System.Action(Of Microsoft.Extensions.Hosting.IHostBuilder)
  name.vb: Action(Of IHostBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Microsoft.Extensions.Hosting.IHostBuilder
    name: IHostBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostbuilder
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Extensions.Hosting.IHostBuilder
    name: IHostBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostbuilder
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection}
  commentId: T:System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IServiceCollection>
  nameWithType: Action<IServiceCollection>
  fullName: System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>
  nameWithType.vb: Action(Of IServiceCollection)
  fullName.vb: System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: Action(Of IServiceCollection)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  - name: )
- uid: System.Action{Microsoft.Extensions.Logging.ILoggingBuilder}
  commentId: T:System.Action{Microsoft.Extensions.Logging.ILoggingBuilder}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ILoggingBuilder>
  nameWithType: Action<ILoggingBuilder>
  fullName: System.Action<Microsoft.Extensions.Logging.ILoggingBuilder>
  nameWithType.vb: Action(Of ILoggingBuilder)
  fullName.vb: System.Action(Of Microsoft.Extensions.Logging.ILoggingBuilder)
  name.vb: Action(Of ILoggingBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Microsoft.Extensions.Logging.ILoggingBuilder
    name: ILoggingBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggingbuilder
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Extensions.Logging.ILoggingBuilder
    name: ILoggingBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggingbuilder
  - name: )
- uid: Microsoft.Extensions.Logging.LogLevel
  commentId: T:Microsoft.Extensions.Logging.LogLevel
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.Extensions.Logging.LogLevel
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.Dispose*
  commentId: Overload:Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory`1.Dispose
  href: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory-1.html#Coree_NETStandard_Abstractions_ServiceFactory_ServiceFactory_1_Dispose
  name: Dispose
  nameWithType: ServiceFactory<T>.Dispose
  fullName: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory<T>.Dispose
  nameWithType.vb: ServiceFactory(Of T).Dispose
  fullName.vb: Coree.NETStandard.Abstractions.ServiceFactory.ServiceFactory(Of T).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
