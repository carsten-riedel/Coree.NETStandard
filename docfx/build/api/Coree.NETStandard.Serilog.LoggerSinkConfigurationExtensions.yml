### YamlMime:ManagedReference
items:
- uid: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions
  commentId: T:Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions
  id: LoggerSinkConfigurationExtensions
  parent: Coree.NETStandard.Serilog
  children:
  - Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.ConsoleConditionalLevel(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Events.LogEventLevel,System.String,System.IFormatProvider,Serilog.Core.LoggingLevelSwitch,System.Nullable{Serilog.Events.LogEventLevel},Serilog.Sinks.SystemConsole.Themes.ConsoleTheme,System.Boolean,System.Object,System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel})
  - Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.DebugConditionalLevel(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Events.LogEventLevel,System.String,System.IFormatProvider,Serilog.Core.LoggingLevelSwitch,System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel})
  langs:
  - csharp
  - vb
  name: LoggerSinkConfigurationExtensions
  nameWithType: LoggerSinkConfigurationExtensions
  fullName: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions
  type: Class
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Serilog/LoggerSinkConfigurationExtensions.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: LoggerSinkConfigurationExtensions
    path: ../../src/Projects/Coree.NETStandard/Serilog/LoggerSinkConfigurationExtensions.cs
    startLine: 14
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Serilog
  summary: Provides extension methods for configuring Serilog sinks with conditional log level processing.
  example: []
  syntax:
    content: public static class LoggerSinkConfigurationExtensions
    content.vb: Public Module LoggerSinkConfigurationExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.ConsoleConditionalLevel(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Events.LogEventLevel,System.String,System.IFormatProvider,Serilog.Core.LoggingLevelSwitch,System.Nullable{Serilog.Events.LogEventLevel},Serilog.Sinks.SystemConsole.Themes.ConsoleTheme,System.Boolean,System.Object,System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel})
  commentId: M:Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.ConsoleConditionalLevel(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Events.LogEventLevel,System.String,System.IFormatProvider,Serilog.Core.LoggingLevelSwitch,System.Nullable{Serilog.Events.LogEventLevel},Serilog.Sinks.SystemConsole.Themes.ConsoleTheme,System.Boolean,System.Object,System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel})
  id: ConsoleConditionalLevel(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Events.LogEventLevel,System.String,System.IFormatProvider,Serilog.Core.LoggingLevelSwitch,System.Nullable{Serilog.Events.LogEventLevel},Serilog.Sinks.SystemConsole.Themes.ConsoleTheme,System.Boolean,System.Object,System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel})
  isExtensionMethod: true
  parent: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions
  langs:
  - csharp
  - vb
  name: ConsoleConditionalLevel(LoggerSinkConfiguration, LogEventLevel, string, IFormatProvider?, LoggingLevelSwitch?, LogEventLevel?, ConsoleTheme?, bool, object?, Dictionary<string, LogEventLevel>?)
  nameWithType: LoggerSinkConfigurationExtensions.ConsoleConditionalLevel(LoggerSinkConfiguration, LogEventLevel, string, IFormatProvider?, LoggingLevelSwitch?, LogEventLevel?, ConsoleTheme?, bool, object?, Dictionary<string, LogEventLevel>?)
  fullName: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.ConsoleConditionalLevel(Serilog.Configuration.LoggerSinkConfiguration, Serilog.Events.LogEventLevel, string, System.IFormatProvider?, Serilog.Core.LoggingLevelSwitch?, Serilog.Events.LogEventLevel?, Serilog.Sinks.SystemConsole.Themes.ConsoleTheme?, bool, object?, System.Collections.Generic.Dictionary<string, Serilog.Events.LogEventLevel>?)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Serilog/LoggerSinkConfigurationExtensions.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: ConsoleConditionalLevel
    path: ../../src/Projects/Coree.NETStandard/Serilog/LoggerSinkConfigurationExtensions.cs
    startLine: 31
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Serilog
  summary: Adds a console sink with conditional log level processing to the logger configuration.
  example: []
  syntax:
    content: public static LoggerConfiguration ConsoleConditionalLevel(this LoggerSinkConfiguration loggerConfiguration, LogEventLevel restrictedToMinimumLevel = LogEventLevel.Verbose, string outputTemplate = "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}", IFormatProvider? formatProvider = null, LoggingLevelSwitch? levelSwitch = null, LogEventLevel? standardErrorFromLevel = null, ConsoleTheme? theme = null, bool applyThemeToRedirectedOutput = false, object? syncRoot = null, Dictionary<string, LogEventLevel>? conditionalLevel = null)
    parameters:
    - id: loggerConfiguration
      type: Serilog.Configuration.LoggerSinkConfiguration
      description: The logger configuration to modify.
    - id: restrictedToMinimumLevel
      type: Serilog.Events.LogEventLevel
      description: The minimum log event level required for events to be passed to the sink.
    - id: outputTemplate
      type: System.String
      description: The output template determining the format of log events.
    - id: formatProvider
      type: System.IFormatProvider
      description: The format provider for formatting log event properties.
    - id: levelSwitch
      type: Serilog.Core.LoggingLevelSwitch
      description: A switch allowing the pass-through log event level to be changed at runtime.
    - id: standardErrorFromLevel
      type: System.Nullable{Serilog.Events.LogEventLevel}
      description: The log event level at which to start writing to standard error instead of standard output.
    - id: theme
      type: Serilog.Sinks.SystemConsole.Themes.ConsoleTheme
      description: The theme to apply to the output.
    - id: applyThemeToRedirectedOutput
      type: System.Boolean
      description: Whether to apply the theme to redirected output streams.
    - id: syncRoot
      type: System.Object
      description: An object to synchronize the log event emission.
    - id: conditionalLevel
      type: System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel}
      description: A dictionary mapping specific conditions to log event levels for conditional processing.
    return:
      type: Serilog.LoggerConfiguration
      description: The modified logger configuration.
    content.vb: Public Shared Function ConsoleConditionalLevel(loggerConfiguration As LoggerSinkConfiguration, restrictedToMinimumLevel As LogEventLevel = LogEventLevel.Verbose, outputTemplate As String = "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}", formatProvider As IFormatProvider = Nothing, levelSwitch As LoggingLevelSwitch = Nothing, standardErrorFromLevel As LogEventLevel? = Nothing, theme As ConsoleTheme = Nothing, applyThemeToRedirectedOutput As Boolean = False, syncRoot As Object = Nothing, conditionalLevel As Dictionary(Of String, LogEventLevel) = Nothing) As LoggerConfiguration
  overload: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.ConsoleConditionalLevel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when loggerConfiguration is null.
  nameWithType.vb: LoggerSinkConfigurationExtensions.ConsoleConditionalLevel(LoggerSinkConfiguration, LogEventLevel, String, IFormatProvider, LoggingLevelSwitch, LogEventLevel?, ConsoleTheme, Boolean, Object, Dictionary(Of String, LogEventLevel))
  fullName.vb: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.ConsoleConditionalLevel(Serilog.Configuration.LoggerSinkConfiguration, Serilog.Events.LogEventLevel, String, System.IFormatProvider, Serilog.Core.LoggingLevelSwitch, Serilog.Events.LogEventLevel?, Serilog.Sinks.SystemConsole.Themes.ConsoleTheme, Boolean, Object, System.Collections.Generic.Dictionary(Of String, Serilog.Events.LogEventLevel))
  name.vb: ConsoleConditionalLevel(LoggerSinkConfiguration, LogEventLevel, String, IFormatProvider, LoggingLevelSwitch, LogEventLevel?, ConsoleTheme, Boolean, Object, Dictionary(Of String, LogEventLevel))
- uid: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.DebugConditionalLevel(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Events.LogEventLevel,System.String,System.IFormatProvider,Serilog.Core.LoggingLevelSwitch,System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel})
  commentId: M:Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.DebugConditionalLevel(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Events.LogEventLevel,System.String,System.IFormatProvider,Serilog.Core.LoggingLevelSwitch,System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel})
  id: DebugConditionalLevel(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Events.LogEventLevel,System.String,System.IFormatProvider,Serilog.Core.LoggingLevelSwitch,System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel})
  isExtensionMethod: true
  parent: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions
  langs:
  - csharp
  - vb
  name: DebugConditionalLevel(LoggerSinkConfiguration, LogEventLevel, string, IFormatProvider?, LoggingLevelSwitch?, Dictionary<string, LogEventLevel>?)
  nameWithType: LoggerSinkConfigurationExtensions.DebugConditionalLevel(LoggerSinkConfiguration, LogEventLevel, string, IFormatProvider?, LoggingLevelSwitch?, Dictionary<string, LogEventLevel>?)
  fullName: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.DebugConditionalLevel(Serilog.Configuration.LoggerSinkConfiguration, Serilog.Events.LogEventLevel, string, System.IFormatProvider?, Serilog.Core.LoggingLevelSwitch?, System.Collections.Generic.Dictionary<string, Serilog.Events.LogEventLevel>?)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Serilog/LoggerSinkConfigurationExtensions.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: DebugConditionalLevel
    path: ../../src/Projects/Coree.NETStandard/Serilog/LoggerSinkConfigurationExtensions.cs
    startLine: 60
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Serilog
  summary: Adds a debug sink with conditional log level processing to the logger configuration.
  example: []
  syntax:
    content: public static LoggerConfiguration DebugConditionalLevel(this LoggerSinkConfiguration loggerConfiguration, LogEventLevel restrictedToMinimumLevel = LogEventLevel.Verbose, string outputTemplate = "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}", IFormatProvider? formatProvider = null, LoggingLevelSwitch? levelSwitch = null, Dictionary<string, LogEventLevel>? conditionalLevel = null)
    parameters:
    - id: loggerConfiguration
      type: Serilog.Configuration.LoggerSinkConfiguration
      description: The logger configuration to modify.
    - id: restrictedToMinimumLevel
      type: Serilog.Events.LogEventLevel
      description: The minimum log event level required for events to be passed to the sink.
    - id: outputTemplate
      type: System.String
      description: The output template determining the format of log events.
    - id: formatProvider
      type: System.IFormatProvider
      description: The format provider for formatting log event properties.
    - id: levelSwitch
      type: Serilog.Core.LoggingLevelSwitch
      description: A switch allowing the pass-through log event level to be changed at runtime.
    - id: conditionalLevel
      type: System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel}
      description: A dictionary mapping specific conditions to log event levels for conditional processing.
    return:
      type: Serilog.LoggerConfiguration
      description: The modified logger configuration.
    content.vb: Public Shared Function DebugConditionalLevel(loggerConfiguration As LoggerSinkConfiguration, restrictedToMinimumLevel As LogEventLevel = LogEventLevel.Verbose, outputTemplate As String = "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}", formatProvider As IFormatProvider = Nothing, levelSwitch As LoggingLevelSwitch = Nothing, conditionalLevel As Dictionary(Of String, LogEventLevel) = Nothing) As LoggerConfiguration
  overload: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.DebugConditionalLevel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when loggerConfiguration is null.
  nameWithType.vb: LoggerSinkConfigurationExtensions.DebugConditionalLevel(LoggerSinkConfiguration, LogEventLevel, String, IFormatProvider, LoggingLevelSwitch, Dictionary(Of String, LogEventLevel))
  fullName.vb: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.DebugConditionalLevel(Serilog.Configuration.LoggerSinkConfiguration, Serilog.Events.LogEventLevel, String, System.IFormatProvider, Serilog.Core.LoggingLevelSwitch, System.Collections.Generic.Dictionary(Of String, Serilog.Events.LogEventLevel))
  name.vb: DebugConditionalLevel(LoggerSinkConfiguration, LogEventLevel, String, IFormatProvider, LoggingLevelSwitch, Dictionary(Of String, LogEventLevel))
references:
- uid: Coree.NETStandard.Serilog
  commentId: N:Coree.NETStandard.Serilog
  href: Coree.html
  name: Coree.NETStandard.Serilog
  nameWithType: Coree.NETStandard.Serilog
  fullName: Coree.NETStandard.Serilog
  spec.csharp:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Serilog
    name: Serilog
    href: Coree.NETStandard.Serilog.html
  spec.vb:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Serilog
    name: Serilog
    href: Coree.NETStandard.Serilog.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.ConsoleConditionalLevel*
  commentId: Overload:Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.ConsoleConditionalLevel
  href: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.html#Coree_NETStandard_Serilog_LoggerSinkConfigurationExtensions_ConsoleConditionalLevel_Serilog_Configuration_LoggerSinkConfiguration_Serilog_Events_LogEventLevel_System_String_System_IFormatProvider_Serilog_Core_LoggingLevelSwitch_System_Nullable_Serilog_Events_LogEventLevel__Serilog_Sinks_SystemConsole_Themes_ConsoleTheme_System_Boolean_System_Object_System_Collections_Generic_Dictionary_System_String_Serilog_Events_LogEventLevel__
  name: ConsoleConditionalLevel
  nameWithType: LoggerSinkConfigurationExtensions.ConsoleConditionalLevel
  fullName: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.ConsoleConditionalLevel
- uid: Serilog.Configuration.LoggerSinkConfiguration
  commentId: T:Serilog.Configuration.LoggerSinkConfiguration
  parent: Serilog.Configuration
  isExternal: true
  name: LoggerSinkConfiguration
  nameWithType: LoggerSinkConfiguration
  fullName: Serilog.Configuration.LoggerSinkConfiguration
- uid: Serilog.Events.LogEventLevel
  commentId: T:Serilog.Events.LogEventLevel
  parent: Serilog.Events
  isExternal: true
  name: LogEventLevel
  nameWithType: LogEventLevel
  fullName: Serilog.Events.LogEventLevel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: Serilog.Core.LoggingLevelSwitch
  commentId: T:Serilog.Core.LoggingLevelSwitch
  parent: Serilog.Core
  isExternal: true
  name: LoggingLevelSwitch
  nameWithType: LoggingLevelSwitch
  fullName: Serilog.Core.LoggingLevelSwitch
- uid: System.Nullable{Serilog.Events.LogEventLevel}
  commentId: T:System.Nullable{Serilog.Events.LogEventLevel}
  parent: System
  definition: System.Nullable`1
  name: LogEventLevel?
  nameWithType: LogEventLevel?
  fullName: Serilog.Events.LogEventLevel?
  spec.csharp:
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
  - name: '?'
- uid: Serilog.Sinks.SystemConsole.Themes.ConsoleTheme
  commentId: T:Serilog.Sinks.SystemConsole.Themes.ConsoleTheme
  parent: Serilog.Sinks.SystemConsole.Themes
  isExternal: true
  name: ConsoleTheme
  nameWithType: ConsoleTheme
  fullName: Serilog.Sinks.SystemConsole.Themes.ConsoleTheme
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Serilog.Events.LogEventLevel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, LogEventLevel>
  nameWithType: Dictionary<string, LogEventLevel>
  fullName: System.Collections.Generic.Dictionary<string, Serilog.Events.LogEventLevel>
  nameWithType.vb: Dictionary(Of String, LogEventLevel)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Serilog.Events.LogEventLevel)
  name.vb: Dictionary(Of String, LogEventLevel)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
  - name: )
- uid: Serilog.LoggerConfiguration
  commentId: T:Serilog.LoggerConfiguration
  parent: Serilog
  isExternal: true
  name: LoggerConfiguration
  nameWithType: LoggerConfiguration
  fullName: Serilog.LoggerConfiguration
- uid: Serilog.Configuration
  commentId: N:Serilog.Configuration
  isExternal: true
  name: Serilog.Configuration
  nameWithType: Serilog.Configuration
  fullName: Serilog.Configuration
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Configuration
    name: Configuration
    isExternal: true
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Configuration
    name: Configuration
    isExternal: true
- uid: Serilog.Events
  commentId: N:Serilog.Events
  isExternal: true
  name: Serilog.Events
  nameWithType: Serilog.Events
  fullName: Serilog.Events
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Events
    name: Events
    isExternal: true
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Events
    name: Events
    isExternal: true
- uid: Serilog.Core
  commentId: N:Serilog.Core
  isExternal: true
  name: Serilog.Core
  nameWithType: Serilog.Core
  fullName: Serilog.Core
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Core
    name: Core
    isExternal: true
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Serilog.Sinks.SystemConsole.Themes
  commentId: N:Serilog.Sinks.SystemConsole.Themes
  isExternal: true
  name: Serilog.Sinks.SystemConsole.Themes
  nameWithType: Serilog.Sinks.SystemConsole.Themes
  fullName: Serilog.Sinks.SystemConsole.Themes
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Sinks
    name: Sinks
    isExternal: true
  - name: .
  - uid: Serilog.Sinks.SystemConsole
    name: SystemConsole
    isExternal: true
  - name: .
  - uid: Serilog.Sinks.SystemConsole.Themes
    name: Themes
    isExternal: true
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Sinks
    name: Sinks
    isExternal: true
  - name: .
  - uid: Serilog.Sinks.SystemConsole
    name: SystemConsole
    isExternal: true
  - name: .
  - uid: Serilog.Sinks.SystemConsole.Themes
    name: Themes
    isExternal: true
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Serilog
  commentId: N:Serilog
  isExternal: true
  name: Serilog
  nameWithType: Serilog
  fullName: Serilog
- uid: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.DebugConditionalLevel*
  commentId: Overload:Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.DebugConditionalLevel
  href: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.html#Coree_NETStandard_Serilog_LoggerSinkConfigurationExtensions_DebugConditionalLevel_Serilog_Configuration_LoggerSinkConfiguration_Serilog_Events_LogEventLevel_System_String_System_IFormatProvider_Serilog_Core_LoggingLevelSwitch_System_Collections_Generic_Dictionary_System_String_Serilog_Events_LogEventLevel__
  name: DebugConditionalLevel
  nameWithType: LoggerSinkConfigurationExtensions.DebugConditionalLevel
  fullName: Coree.NETStandard.Serilog.LoggerSinkConfigurationExtensions.DebugConditionalLevel
