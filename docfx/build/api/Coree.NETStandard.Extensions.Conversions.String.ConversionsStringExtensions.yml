### YamlMime:ManagedReference
items:
- uid: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions
  commentId: T:Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions
  id: ConversionsStringExtensions
  parent: Coree.NETStandard.Extensions.Conversions.String
  children:
  - Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(System.String,System.Char[],System.StringSplitOptions,System.Boolean)
  - Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(System.String,System.String,System.StringSplitOptions,System.Boolean)
  - Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(System.String,System.String[],System.StringSplitOptions,System.Boolean)
  - Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray(System.String,Coree.NETStandard.Extensions.Conversions.String.Encodings)
  - Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray(System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: ConversionsStringExtensions
  nameWithType: ConversionsStringExtensions
  fullName: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions
  type: Class
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Extensions/Conversions/String/ToByteArray.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: ConversionsStringExtensions
    path: ../../src/Projects/Coree.NETStandard/Extensions/Conversions/String/ToByteArray.cs
    startLine: 49
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Extensions.Conversions.String
  summary: Provides extension methods for string operations, enhancing the built-in string manipulation capabilities.
  example: []
  syntax:
    content: public static class ConversionsStringExtensions
    content.vb: Public Module ConversionsStringExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(System.String,System.String,System.StringSplitOptions,System.Boolean)
  commentId: M:Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(System.String,System.String,System.StringSplitOptions,System.Boolean)
  id: SplitWith(System.String,System.String,System.StringSplitOptions,System.Boolean)
  isExtensionMethod: true
  parent: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions
  langs:
  - csharp
  - vb
  name: SplitWith(string?, string, StringSplitOptions, bool)
  nameWithType: ConversionsStringExtensions.SplitWith(string?, string, StringSplitOptions, bool)
  fullName: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(string?, string, System.StringSplitOptions, bool)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Extensions/Conversions/String/SplitWith.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: SplitWith
    path: ../../src/Projects/Coree.NETStandard/Extensions/Conversions/String/SplitWith.cs
    startLine: 23
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Extensions.Conversions.String
  summary: Splits the input string by a specified string delimiter, with options to control the split operation. Offers the option to remove the delimiter from the resulting array.
  remarks: >-
    This method uses regular expressions to split the input string, which may have performance implications for large strings or a large number of delimiters.

    When removeDelimiters is true, it filters out the delimiter if it matches exactly, after splitting.
  example: []
  syntax:
    content: public static string[] SplitWith(this string? input, string delimiter, StringSplitOptions options = StringSplitOptions.None, bool removeDelimiters = true)
    parameters:
    - id: input
      type: System.String
      description: The string to be split.
    - id: delimiter
      type: System.String
      description: The string delimiter to split by.
    - id: options
      type: System.StringSplitOptions
      description: Specifies whether to omit empty or whitespace-only substrings from the resulting array.
    - id: removeDelimiters
      type: System.Boolean
      description: When set to true, the delimiter itself is excluded from the result array.
    return:
      type: System.String[]
      description: An array of substrings that are delimited by the specified string, optionally excluding the delimiter itself.
    content.vb: Public Shared Function SplitWith(input As String, delimiter As String, options As StringSplitOptions = StringSplitOptions.None, removeDelimiters As Boolean = True) As String()
  overload: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith*
  nameWithType.vb: ConversionsStringExtensions.SplitWith(String, String, StringSplitOptions, Boolean)
  fullName.vb: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(String, String, System.StringSplitOptions, Boolean)
  name.vb: SplitWith(String, String, StringSplitOptions, Boolean)
- uid: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(System.String,System.Char[],System.StringSplitOptions,System.Boolean)
  commentId: M:Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(System.String,System.Char[],System.StringSplitOptions,System.Boolean)
  id: SplitWith(System.String,System.Char[],System.StringSplitOptions,System.Boolean)
  isExtensionMethod: true
  parent: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions
  langs:
  - csharp
  - vb
  name: SplitWith(string?, char[], StringSplitOptions, bool)
  nameWithType: ConversionsStringExtensions.SplitWith(string?, char[], StringSplitOptions, bool)
  fullName: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(string?, char[], System.StringSplitOptions, bool)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Extensions/Conversions/String/SplitWith.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: SplitWith
    path: ../../src/Projects/Coree.NETStandard/Extensions/Conversions/String/SplitWith.cs
    startLine: 40
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Extensions.Conversions.String
  summary: Splits the input string by an array of characters, treating them as individual delimiters, with options to control the split operation. Offers the option to remove the delimiters from the resulting array.
  remarks: >-
    This method constructs a string from the character array and uses regular expressions for splitting, which may have performance implications for large strings or a large number of delimiters.

    When removeDelimiters is true, it filters out any substring that matches one of the delimiters exactly, after splitting.
  example: []
  syntax:
    content: public static string[] SplitWith(this string? input, char[] delimiter, StringSplitOptions options = StringSplitOptions.None, bool removeDelimiters = true)
    parameters:
    - id: input
      type: System.String
      description: The string to be split.
    - id: delimiter
      type: System.Char[]
      description: The array of characters joined to a string to use as delimiter
    - id: options
      type: System.StringSplitOptions
      description: Specifies whether to omit empty or whitespace-only substrings from the resulting array.
    - id: removeDelimiters
      type: System.Boolean
      description: When set to true, the delimiters themselves are excluded from the result array.
    return:
      type: System.String[]
      description: An array of substrings that are delimited by the specified characters, optionally excluding the delimiters themselves.
    content.vb: Public Shared Function SplitWith(input As String, delimiter As Char(), options As StringSplitOptions = StringSplitOptions.None, removeDelimiters As Boolean = True) As String()
  overload: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith*
  nameWithType.vb: ConversionsStringExtensions.SplitWith(String, Char(), StringSplitOptions, Boolean)
  fullName.vb: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(String, Char(), System.StringSplitOptions, Boolean)
  name.vb: SplitWith(String, Char(), StringSplitOptions, Boolean)
- uid: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(System.String,System.String[],System.StringSplitOptions,System.Boolean)
  commentId: M:Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(System.String,System.String[],System.StringSplitOptions,System.Boolean)
  id: SplitWith(System.String,System.String[],System.StringSplitOptions,System.Boolean)
  isExtensionMethod: true
  parent: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions
  langs:
  - csharp
  - vb
  name: SplitWith(string?, string[], StringSplitOptions, bool)
  nameWithType: ConversionsStringExtensions.SplitWith(string?, string[], StringSplitOptions, bool)
  fullName: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(string?, string[], System.StringSplitOptions, bool)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Extensions/Conversions/String/SplitWith.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: SplitWith
    path: ../../src/Projects/Coree.NETStandard/Extensions/Conversions/String/SplitWith.cs
    startLine: 61
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Extensions.Conversions.String
  summary: Splits the input string by multiple string delimiters, with options to control the split operation. Offers the option to remove the delimiters from the resulting array.
  remarks: >-
    This method uses regular expressions to split the input string, which may have performance implications for large strings or a large number of delimiters.

    When removeDelimiters is true, it filters out any substring that matches one of the delimiters exactly, after splitting.
  example: []
  syntax:
    content: public static string[] SplitWith(this string? input, string[] delimiters, StringSplitOptions options = StringSplitOptions.None, bool removeDelimiters = true)
    parameters:
    - id: input
      type: System.String
      description: The string to be split.
    - id: delimiters
      type: System.String[]
      description: The array of string delimiters to split by.
    - id: options
      type: System.StringSplitOptions
      description: Specifies whether to omit empty or whitespace-only substrings from the resulting array.
    - id: removeDelimiters
      type: System.Boolean
      description: When set to false, the delimiters themselves are not excluded from the result array.
    return:
      type: System.String[]
      description: An array of substrings that are delimited by any of the specified strings, optionally excluding the delimiters themselves.
    content.vb: Public Shared Function SplitWith(input As String, delimiters As String(), options As StringSplitOptions = StringSplitOptions.None, removeDelimiters As Boolean = True) As String()
  overload: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith*
  nameWithType.vb: ConversionsStringExtensions.SplitWith(String, String(), StringSplitOptions, Boolean)
  fullName.vb: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith(String, String(), System.StringSplitOptions, Boolean)
  name.vb: SplitWith(String, String(), StringSplitOptions, Boolean)
- uid: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray(System.String,Coree.NETStandard.Extensions.Conversions.String.Encodings)
  commentId: M:Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray(System.String,Coree.NETStandard.Extensions.Conversions.String.Encodings)
  id: ToByteArray(System.String,Coree.NETStandard.Extensions.Conversions.String.Encodings)
  isExtensionMethod: true
  parent: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions
  langs:
  - csharp
  - vb
  name: ToByteArray(string, Encodings)
  nameWithType: ConversionsStringExtensions.ToByteArray(string, Encodings)
  fullName: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray(string, Coree.NETStandard.Extensions.Conversions.String.Encodings)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Extensions/Conversions/String/ToByteArray.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: ToByteArray
    path: ../../src/Projects/Coree.NETStandard/Extensions/Conversions/String/ToByteArray.cs
    startLine: 57
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Extensions.Conversions.String
  summary: Converts a string to a selected text encoding byte array.
  example: []
  syntax:
    content: public static byte[] ToByteArray(this string String, Encodings encoding = Encodings.UTF8)
    parameters:
    - id: String
      type: System.String
      description: ''
    - id: encoding
      type: Coree.NETStandard.Extensions.Conversions.String.Encodings
      description: The encoding type System.Text.Encoding
    return:
      type: System.Byte[]
      description: ''
    content.vb: Public Shared Function ToByteArray([String] As String, encoding As Encodings = Encodings.UTF8) As Byte()
  overload: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray*
  nameWithType.vb: ConversionsStringExtensions.ToByteArray(String, Encodings)
  fullName.vb: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray(String, Coree.NETStandard.Extensions.Conversions.String.Encodings)
  name.vb: ToByteArray(String, Encodings)
- uid: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray(System.String,System.Int32)
  commentId: M:Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray(System.String,System.Int32)
  id: ToByteArray(System.String,System.Int32)
  isExtensionMethod: true
  parent: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions
  langs:
  - csharp
  - vb
  name: ToByteArray(string, int)
  nameWithType: ConversionsStringExtensions.ToByteArray(string, int)
  fullName: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray(string, int)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Extensions/Conversions/String/ToByteArray.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: ToByteArray
    path: ../../src/Projects/Coree.NETStandard/Extensions/Conversions/String/ToByteArray.cs
    startLine: 109
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Extensions.Conversions.String
  summary: Converts a string to a byte array using a specified encoding.
  example: []
  syntax:
    content: public static byte[] ToByteArray(this string String, int CodePage)
    parameters:
    - id: String
      type: System.String
      description: The string to be converted.
    - id: CodePage
      type: System.Int32
      description: The code page used for encoding.
    return:
      type: System.Byte[]
      description: A byte array resulting from encoding the string with the specified code page.
    content.vb: Public Shared Function ToByteArray([String] As String, CodePage As Integer) As Byte()
  overload: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when an invalid code page is provided or the string is null.
  nameWithType.vb: ConversionsStringExtensions.ToByteArray(String, Integer)
  fullName.vb: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray(String, Integer)
  name.vb: ToByteArray(String, Integer)
references:
- uid: Coree.NETStandard.Extensions.Conversions.String
  commentId: N:Coree.NETStandard.Extensions.Conversions.String
  href: Coree.html
  name: Coree.NETStandard.Extensions.Conversions.String
  nameWithType: Coree.NETStandard.Extensions.Conversions.String
  fullName: Coree.NETStandard.Extensions.Conversions.String
  spec.csharp:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Extensions
    name: Extensions
    href: Coree.NETStandard.Extensions.html
  - name: .
  - uid: Coree.NETStandard.Extensions.Conversions
    name: Conversions
    href: Coree.NETStandard.Extensions.Conversions.html
  - name: .
  - uid: Coree.NETStandard.Extensions.Conversions.String
    name: String
    href: Coree.NETStandard.Extensions.Conversions.String.html
  spec.vb:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Extensions
    name: Extensions
    href: Coree.NETStandard.Extensions.html
  - name: .
  - uid: Coree.NETStandard.Extensions.Conversions
    name: Conversions
    href: Coree.NETStandard.Extensions.Conversions.html
  - name: .
  - uid: Coree.NETStandard.Extensions.Conversions.String
    name: String
    href: Coree.NETStandard.Extensions.Conversions.String.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith*
  commentId: Overload:Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith
  href: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.html#Coree_NETStandard_Extensions_Conversions_String_ConversionsStringExtensions_SplitWith_System_String_System_String_System_StringSplitOptions_System_Boolean_
  name: SplitWith
  nameWithType: ConversionsStringExtensions.SplitWith
  fullName: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.SplitWith
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.StringSplitOptions
  commentId: T:System.StringSplitOptions
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.stringsplitoptions
  name: StringSplitOptions
  nameWithType: StringSplitOptions
  fullName: System.StringSplitOptions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Char[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char[]
  nameWithType: char[]
  fullName: char[]
  nameWithType.vb: Char()
  fullName.vb: Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
- uid: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray*
  commentId: Overload:Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray
  href: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.html#Coree_NETStandard_Extensions_Conversions_String_ConversionsStringExtensions_ToByteArray_System_String_Coree_NETStandard_Extensions_Conversions_String_Encodings_
  name: ToByteArray
  nameWithType: ConversionsStringExtensions.ToByteArray
  fullName: Coree.NETStandard.Extensions.Conversions.String.ConversionsStringExtensions.ToByteArray
- uid: Coree.NETStandard.Extensions.Conversions.String.Encodings
  commentId: T:Coree.NETStandard.Extensions.Conversions.String.Encodings
  parent: Coree.NETStandard.Extensions.Conversions.String
  href: Coree.NETStandard.Extensions.Conversions.String.Encodings.html
  name: Encodings
  nameWithType: Encodings
  fullName: Coree.NETStandard.Extensions.Conversions.String.Encodings
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
