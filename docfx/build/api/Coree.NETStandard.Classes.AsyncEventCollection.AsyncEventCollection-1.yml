### YamlMime:ManagedReference
items:
- uid: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1
  commentId: T:Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1
  id: AsyncEventCollection`1
  parent: Coree.NETStandard.Classes.AsyncEventCollection
  children:
  - Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.Collection
  - Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.DispatchEvents(System.Threading.CancellationToken,System.String)
  - Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.EventHandlers
  langs:
  - csharp
  - vb
  name: AsyncEventCollection<T>
  nameWithType: AsyncEventCollection<T>
  fullName: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection<T>
  type: Class
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Classes/AsyncEventCollection/AsyncEventCollection.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: AsyncEventCollection
    path: ../../src/Projects/Coree.NETStandard/Classes/AsyncEventCollection/AsyncEventCollection.cs
    startLine: 13
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Classes.AsyncEventCollection
  summary: Manages a collection of events and provides asynchronous event dispatching.
  example: []
  syntax:
    content: public class AsyncEventCollection<T>
    typeParameters:
    - id: T
      description: The type of elements stored in the thread-safe collection.
    content.vb: Public Class AsyncEventCollection(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: AsyncEventCollection(Of T)
  fullName.vb: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection(Of T)
  name.vb: AsyncEventCollection(Of T)
- uid: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.Collection
  commentId: P:Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.Collection
  id: Collection
  parent: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1
  langs:
  - csharp
  - vb
  name: Collection
  nameWithType: AsyncEventCollection<T>.Collection
  fullName: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection<T>.Collection
  type: Property
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Classes/AsyncEventCollection/AsyncEventCollection.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: Collection
    path: ../../src/Projects/Coree.NETStandard/Classes/AsyncEventCollection/AsyncEventCollection.cs
    startLine: 18
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Classes.AsyncEventCollection
  summary: Gets or sets the thread-safe collection of elements.
  example: []
  syntax:
    content: public ThreadSafeCollection<T> Collection { get; set; }
    parameters: []
    return:
      type: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection{{T}}
    content.vb: Public Property Collection As ThreadSafeCollection(Of T)
  overload: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.Collection*
  nameWithType.vb: AsyncEventCollection(Of T).Collection
  fullName.vb: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection(Of T).Collection
- uid: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.EventHandlers
  commentId: E:Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.EventHandlers
  id: EventHandlers
  parent: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1
  langs:
  - csharp
  - vb
  name: EventHandlers
  nameWithType: AsyncEventCollection<T>.EventHandlers
  fullName: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection<T>.EventHandlers
  type: Event
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Classes/AsyncEventCollection/AsyncEventCollection.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: EventHandlers
    path: ../../src/Projects/Coree.NETStandard/Classes/AsyncEventCollection/AsyncEventCollection.cs
    startLine: 34
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Classes.AsyncEventCollection
  summary: Event that can be subscribed to in order to receive asynchronous notifications when the collection changes.
  example: []
  syntax:
    content: public event AsyncEventCollection<T>.CustomEventDelegate EventHandlers
    return:
      type: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.CustomEventDelegate
    content.vb: Public Event EventHandlers As AsyncEventCollection(Of T).CustomEventDelegate
  nameWithType.vb: AsyncEventCollection(Of T).EventHandlers
  fullName.vb: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection(Of T).EventHandlers
- uid: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.DispatchEvents(System.Threading.CancellationToken,System.String)
  commentId: M:Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.DispatchEvents(System.Threading.CancellationToken,System.String)
  id: DispatchEvents(System.Threading.CancellationToken,System.String)
  parent: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1
  langs:
  - csharp
  - vb
  name: DispatchEvents(CancellationToken, string)
  nameWithType: AsyncEventCollection<T>.DispatchEvents(CancellationToken, string)
  fullName: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection<T>.DispatchEvents(System.Threading.CancellationToken, string)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Classes/AsyncEventCollection/AsyncEventCollection.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: DispatchEvents
    path: ../../src/Projects/Coree.NETStandard/Classes/AsyncEventCollection/AsyncEventCollection.cs
    startLine: 45
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Classes.AsyncEventCollection
  summary: Dispatches events to all subscribed handlers asynchronously. If no handlers are subscribed, the method completes without action.
  example: []
  syntax:
    content: public void DispatchEvents(CancellationToken cancellationToken = default, string dispatchKey = "")
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token to cancel the dispatch operation.
    - id: dispatchKey
      type: System.String
      description: Optional key to provide context or identification for the event dispatch.
    content.vb: Public Sub DispatchEvents(cancellationToken As CancellationToken = Nothing, dispatchKey As String = "")
  overload: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.DispatchEvents*
  nameWithType.vb: AsyncEventCollection(Of T).DispatchEvents(CancellationToken, String)
  fullName.vb: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection(Of T).DispatchEvents(System.Threading.CancellationToken, String)
  name.vb: DispatchEvents(CancellationToken, String)
references:
- uid: Coree.NETStandard.Classes.AsyncEventCollection
  commentId: N:Coree.NETStandard.Classes.AsyncEventCollection
  href: Coree.html
  name: Coree.NETStandard.Classes.AsyncEventCollection
  nameWithType: Coree.NETStandard.Classes.AsyncEventCollection
  fullName: Coree.NETStandard.Classes.AsyncEventCollection
  spec.csharp:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Classes
    name: Classes
    href: Coree.NETStandard.Classes.html
  - name: .
  - uid: Coree.NETStandard.Classes.AsyncEventCollection
    name: AsyncEventCollection
    href: Coree.NETStandard.Classes.AsyncEventCollection.html
  spec.vb:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Classes
    name: Classes
    href: Coree.NETStandard.Classes.html
  - name: .
  - uid: Coree.NETStandard.Classes.AsyncEventCollection
    name: AsyncEventCollection
    href: Coree.NETStandard.Classes.AsyncEventCollection.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.Collection*
  commentId: Overload:Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.Collection
  href: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection-1.html#Coree_NETStandard_Classes_AsyncEventCollection_AsyncEventCollection_1_Collection
  name: Collection
  nameWithType: AsyncEventCollection<T>.Collection
  fullName: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection<T>.Collection
  nameWithType.vb: AsyncEventCollection(Of T).Collection
  fullName.vb: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection(Of T).Collection
- uid: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection{{T}}
  commentId: T:Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection{`0}
  parent: Coree.NETStandard.Classes.ThreadSafeCollection
  definition: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection`1
  href: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection-1.html
  name: ThreadSafeCollection<T>
  nameWithType: ThreadSafeCollection<T>
  fullName: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection<T>
  nameWithType.vb: ThreadSafeCollection(Of T)
  fullName.vb: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection(Of T)
  name.vb: ThreadSafeCollection(Of T)
  spec.csharp:
  - uid: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection`1
    name: ThreadSafeCollection
    href: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection`1
    name: ThreadSafeCollection
    href: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection`1
  commentId: T:Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection`1
  href: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection-1.html
  name: ThreadSafeCollection<T>
  nameWithType: ThreadSafeCollection<T>
  fullName: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection<T>
  nameWithType.vb: ThreadSafeCollection(Of T)
  fullName.vb: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection(Of T)
  name.vb: ThreadSafeCollection(Of T)
  spec.csharp:
  - uid: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection`1
    name: ThreadSafeCollection
    href: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection`1
    name: ThreadSafeCollection
    href: Coree.NETStandard.Classes.ThreadSafeCollection.ThreadSafeCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Coree.NETStandard.Classes.ThreadSafeCollection
  commentId: N:Coree.NETStandard.Classes.ThreadSafeCollection
  href: Coree.html
  name: Coree.NETStandard.Classes.ThreadSafeCollection
  nameWithType: Coree.NETStandard.Classes.ThreadSafeCollection
  fullName: Coree.NETStandard.Classes.ThreadSafeCollection
  spec.csharp:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Classes
    name: Classes
    href: Coree.NETStandard.Classes.html
  - name: .
  - uid: Coree.NETStandard.Classes.ThreadSafeCollection
    name: ThreadSafeCollection
    href: Coree.NETStandard.Classes.ThreadSafeCollection.html
  spec.vb:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Classes
    name: Classes
    href: Coree.NETStandard.Classes.html
  - name: .
  - uid: Coree.NETStandard.Classes.ThreadSafeCollection
    name: ThreadSafeCollection
    href: Coree.NETStandard.Classes.ThreadSafeCollection.html
- uid: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.CustomEventDelegate
  commentId: T:Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.CustomEventDelegate
  parent: Coree.NETStandard.Classes.AsyncEventCollection
  href: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection-1.html
  name: AsyncEventCollection<T>.CustomEventDelegate
  nameWithType: AsyncEventCollection<T>.CustomEventDelegate
  fullName: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection<T>.CustomEventDelegate
  nameWithType.vb: AsyncEventCollection(Of T).CustomEventDelegate
  fullName.vb: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection(Of T).CustomEventDelegate
  name.vb: AsyncEventCollection(Of T).CustomEventDelegate
  spec.csharp:
  - uid: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1
    name: AsyncEventCollection
    href: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.CustomEventDelegate
    name: CustomEventDelegate
    href: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection-1.CustomEventDelegate.html
  spec.vb:
  - uid: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1
    name: AsyncEventCollection
    href: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.CustomEventDelegate
    name: CustomEventDelegate
    href: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection-1.CustomEventDelegate.html
- uid: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.DispatchEvents*
  commentId: Overload:Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection`1.DispatchEvents
  href: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection-1.html#Coree_NETStandard_Classes_AsyncEventCollection_AsyncEventCollection_1_DispatchEvents_System_Threading_CancellationToken_System_String_
  name: DispatchEvents
  nameWithType: AsyncEventCollection<T>.DispatchEvents
  fullName: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection<T>.DispatchEvents
  nameWithType.vb: AsyncEventCollection(Of T).DispatchEvents
  fullName.vb: Coree.NETStandard.Classes.AsyncEventCollection.AsyncEventCollection(Of T).DispatchEvents
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
