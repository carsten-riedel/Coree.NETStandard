### YamlMime:ManagedReference
items:
- uid: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions
  commentId: T:Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions
  id: ServiceCollectionExtensions
  parent: Coree.NETStandard.SpectreConsole
  children:
  - Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsole(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  - Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsoleSyncCommandExecutor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  langs:
  - csharp
  - vb
  name: ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
  fullName: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: src/Projects/Coree.NETStandard/SpectreConsole/ServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: ServiceCollectionExtensions
    path: ../../src/Projects/Coree.NETStandard/SpectreConsole/ServiceCollectionExtensions.cs
    startLine: 13
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.SpectreConsole
  summary: Provides extension methods for <xref href="Microsoft.Extensions.DependencyInjection.IServiceCollection" data-throw-if-not-resolved="false"></xref> to facilitate the integration of Spectre.Console's CommandApp.
  example: []
  syntax:
    content: public static class ServiceCollectionExtensions
    content.vb: Public Module ServiceCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsole(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  commentId: M:Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsole(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  id: AddSpectreConsole(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  isExtensionMethod: true
  parent: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddSpectreConsole(IServiceCollection, Action<IConfigurator>, bool)
  nameWithType: ServiceCollectionExtensions.AddSpectreConsole(IServiceCollection, Action<IConfigurator>, bool)
  fullName: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsole(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Spectre.Console.Cli.IConfigurator>, bool)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/SpectreConsole/ServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: AddSpectreConsole
    path: ../../src/Projects/Coree.NETStandard/SpectreConsole/ServiceCollectionExtensions.cs
    startLine: 74
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.SpectreConsole
  summary: >-
    Adds and configures Spectre.Console's <xref href="Spectre.Console.Cli.CommandApp" data-throw-if-not-resolved="false"></xref> and related services to the specified <xref href="Microsoft.Extensions.DependencyInjection.IServiceCollection" data-throw-if-not-resolved="false"></xref>.

    This setup allows for utilizing Spectre.Console's command line interface tools within a .NET Core application,

    enabling the definition, parsing, and execution of commands.
  remarks: >-
    This method performs the following operations:

    - Initializes a new instance of <xref href="Spectre.Console.Cli.CommandApp" data-throw-if-not-resolved="false"></xref> and configures it using the provided <code class="paramref">configureCommandApp</code> action.

    - Scans for command types registered within the <xref href="Spectre.Console.Cli.CommandApp" data-throw-if-not-resolved="false"></xref> and registers them as singletons in the service collection.

    - Registers the <xref href="Spectre.Console.Cli.CommandApp" data-throw-if-not-resolved="false"></xref> itself as a singleton service, configured to use a <xref href="Coree.NETStandard.SpectreConsole.SpectreConsoleTypeRegistrar" data-throw-if-not-resolved="false"></xref> for dependency injection.

    - Adds a <xref href="Coree.NETStandard.SpectreConsole.SpectreConsoleHostedService" data-throw-if-not-resolved="false"></xref>, to manage the application lifecycle of the <xref href="Spectre.Console.Cli.CommandApp" data-throw-if-not-resolved="false"></xref>.

    <example>

    <pre><code class="lang-csharp">static async Task Main(string[] args)

    {
        var builder = Host.CreateDefaultBuilder(args);
        builder.ConfigureServices(services =&gt;
        {
            services.AddSpectreConsole(configCommandApp =&gt;
            {
                configCommandApp.SetApplicationName("testapp");
                configCommandApp.AddCommand&lt;MyAsyncCommand&gt;("my-command");
            });
            services.AddSingleton&lt;ISomeServiceDependency, SomeServiceDependency&gt;();
            services.AddHostedService&lt;SomeOtherBackgroundService&gt;();
        });
        await builder.Build().RunAsync();
    }


    public class MyAsyncCommand : AsyncCommand&lt;MyAsyncCommand.Settings&gt;

    {
        private readonly ISomeServiceDependency dependencyService; private readonly IHostApplicationLifetime appLifetime;

        public MyAsyncCommand(ISomeServiceDependency dependencyService, IHostApplicationLifetime appLifetime)
        {
            this.dependencyService = dependencyService; this.appLifetime = appLifetime;
        }

        public class Settings : CommandSettings
        {
            [Description("The commandline setting")]
            [CommandArgument(0, "&lt;Setting&gt;")]
            public string? SomeSetting { get; init; }
        }

        public override async Task&lt;int&gt; ExecuteAsync(CommandContext context, Settings settings)
        {
            try { await dependencyService.PerformConsoleAction(appLifetime.ApplicationStopping); }
            catch (Exception) { return (int)SpectreConsoleHostedService.ExitCode.CommandTerminated; }
            return (int)SpectreConsoleHostedService.ExitCode.SuccessAndContinue;
        }
    }</code></pre>

    </example>
  example: []
  syntax:
    content: public static IServiceCollection AddSpectreConsole(this IServiceCollection services, Action<IConfigurator> configureCommandApp, bool suppressLifeTimeStatusMessages = true)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IServiceCollection" data-throw-if-not-resolved="false"></xref> to add services to.
    - id: configureCommandApp
      type: System.Action{Spectre.Console.Cli.IConfigurator}
      description: An <xref href="System.Action" data-throw-if-not-resolved="false"></xref> delegate that is used to configure the <xref href="Spectre.Console.Cli.CommandApp" data-throw-if-not-resolved="false"></xref>.
    - id: suppressLifeTimeStatusMessages
      type: System.Boolean
      description: Supresses default output of the application host.
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IServiceCollection" data-throw-if-not-resolved="false"></xref> so that additional calls can be chained.
    content.vb: Public Shared Function AddSpectreConsole(services As IServiceCollection, configureCommandApp As Action(Of IConfigurator), suppressLifeTimeStatusMessages As Boolean = True) As IServiceCollection
  overload: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsole*
  nameWithType.vb: ServiceCollectionExtensions.AddSpectreConsole(IServiceCollection, Action(Of IConfigurator), Boolean)
  fullName.vb: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsole(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Spectre.Console.Cli.IConfigurator), Boolean)
  name.vb: AddSpectreConsole(IServiceCollection, Action(Of IConfigurator), Boolean)
- uid: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsoleSyncCommandExecutor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  commentId: M:Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsoleSyncCommandExecutor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  id: AddSpectreConsoleSyncCommandExecutor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Spectre.Console.Cli.IConfigurator},System.Boolean)
  isExtensionMethod: true
  parent: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddSpectreConsoleSyncCommandExecutor(IServiceCollection, Action<IConfigurator>, bool)
  nameWithType: ServiceCollectionExtensions.AddSpectreConsoleSyncCommandExecutor(IServiceCollection, Action<IConfigurator>, bool)
  fullName: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsoleSyncCommandExecutor(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Spectre.Console.Cli.IConfigurator>, bool)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/SpectreConsole/ServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: AddSpectreConsoleSyncCommandExecutor
    path: ../../src/Projects/Coree.NETStandard/SpectreConsole/ServiceCollectionExtensions.cs
    startLine: 163
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.SpectreConsole
  summary: Registers a command execution environment with Spectre.Console integration into the application's service collection. This setup facilitates the execution of command-line commands synchronously within their own task contexts. Designed to support multiple commands, this configuration allows for abrupt termination of commands upon service cancellation, ensuring immediate response to stop requests.
  remarks: >-
    Integrating the Spectre.Console command executor into your services collection. Commands are executed synchronously but in a separate task. Note that attempts to abort commands gracefully will face challenges due to their execution in separate tasks, which are not managed by the service host's context.

    <example>

    <pre><code class="lang-csharp">static async Task Main(string[] args)

    {
        var builder = Host.CreateDefaultBuilder(args);
        builder.ConfigureServices(services =&gt;
        {
            services.AddSingleton&lt;ISomeServiceDependency, SomeServiceDependency&gt;();
            services.AddHostedService&lt;SomeOtherBackgroundService&gt;();
            services.AddSpectreConsoleSyncCommandExecutor(configureCommandApp =&gt;
            {
                configureCommandApp.SetApplicationName("toolkit");
                configureCommandApp.AddCommand&lt;MyAsyncCommand&gt;("my-command");
            });
        });
        await builder.Build().RunAsync();
    }


    public class MyAsyncCommand : AsyncCommand&lt;MyAsyncCommand.Settings&gt;

    {
        private readonly ISomeServiceDependency dependencyService;
        private readonly IHostApplicationLifetime appLifetime;

        public MyAsyncCommand(ISomeServiceDependency dependencyService, IHostApplicationLifetime appLifetime)
        {
            this.dependencyService = dependencyService;
            this.appLifetime = appLifetime;
        }

        public class Settings : CommandSettings
        {
            [Description("The commandline setting")]
            [CommandArgument(0, "&lt;Setting&gt;")]
            public string? SomeSetting { get; init; }
        }

        public override async Task&lt;int&gt; ExecuteAsync(CommandContext context, Settings settings)
        {
            // Attempts to abort the command gracefully will fail because the command runs on a separate task and not in the service host's managed context.
            try {
                await dependencyService.PerformConsoleAction(appLifetime.ApplicationStopping);
            }
            catch (Exception)
            {
                // This catch block is unreachable. The service host's abrupt termination of the command prevents this block from being executed.
                return (int)SpectreConsoleHostedService.ExitCode.CommandTerminated;
            }
            // It's crucial to explicitly manage the service host's state after command execution completes, either continuing operation or initiating shutdown.
            return (int)SpectreConsoleHostedService.ExitCode.SuccessAndContinue;
        }
    }</code></pre>

    </example>
  example: []
  syntax:
    content: public static IServiceCollection AddSpectreConsoleSyncCommandExecutor(this IServiceCollection services, Action<IConfigurator> configureCommandApp, bool suppressLifeTimeStatusMessages = true)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The IServiceCollection to configure, which is augmented with the necessary services and configurations for Spectre.Console command execution.
    - id: configureCommandApp
      type: System.Action{Spectre.Console.Cli.IConfigurator}
      description: A delegate that configures the command-line application, facilitating the registration and setup of individual commands within the Spectre.Console framework.
    - id: suppressLifeTimeStatusMessages
      type: System.Boolean
      description: Optional. Determines whether to suppress host lifetime status messages, with a default value of true. Setting this to false enables the visibility of these messages, providing insights into the lifecycle events of the host and command execution.
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The IServiceCollection, now configured with the Spectre.Console command execution environment, ready for further configuration or immediate use within the application's startup process.
    content.vb: Public Shared Function AddSpectreConsoleSyncCommandExecutor(services As IServiceCollection, configureCommandApp As Action(Of IConfigurator), suppressLifeTimeStatusMessages As Boolean = True) As IServiceCollection
  overload: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsoleSyncCommandExecutor*
  nameWithType.vb: ServiceCollectionExtensions.AddSpectreConsoleSyncCommandExecutor(IServiceCollection, Action(Of IConfigurator), Boolean)
  fullName.vb: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsoleSyncCommandExecutor(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Spectre.Console.Cli.IConfigurator), Boolean)
  name.vb: AddSpectreConsoleSyncCommandExecutor(IServiceCollection, Action(Of IConfigurator), Boolean)
references:
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Coree.NETStandard.SpectreConsole
  commentId: N:Coree.NETStandard.SpectreConsole
  href: Coree.html
  name: Coree.NETStandard.SpectreConsole
  nameWithType: Coree.NETStandard.SpectreConsole
  fullName: Coree.NETStandard.SpectreConsole
  spec.csharp:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.SpectreConsole
    name: SpectreConsole
    href: Coree.NETStandard.SpectreConsole.html
  spec.vb:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.SpectreConsole
    name: SpectreConsole
    href: Coree.NETStandard.SpectreConsole.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Spectre.Console.Cli.CommandApp
  commentId: T:Spectre.Console.Cli.CommandApp
  isExternal: true
  name: CommandApp
  nameWithType: CommandApp
  fullName: Spectre.Console.Cli.CommandApp
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Coree.NETStandard.SpectreConsole.SpectreConsoleTypeRegistrar
  commentId: T:Coree.NETStandard.SpectreConsole.SpectreConsoleTypeRegistrar
  href: Coree.NETStandard.SpectreConsole.SpectreConsoleTypeRegistrar.html
  name: SpectreConsoleTypeRegistrar
  nameWithType: SpectreConsoleTypeRegistrar
  fullName: Coree.NETStandard.SpectreConsole.SpectreConsoleTypeRegistrar
- uid: Coree.NETStandard.SpectreConsole.SpectreConsoleHostedService
  commentId: T:Coree.NETStandard.SpectreConsole.SpectreConsoleHostedService
  href: Coree.NETStandard.SpectreConsole.SpectreConsoleHostedService.html
  name: SpectreConsoleHostedService
  nameWithType: SpectreConsoleHostedService
  fullName: Coree.NETStandard.SpectreConsole.SpectreConsoleHostedService
- uid: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsole*
  commentId: Overload:Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsole
  href: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.html#Coree_NETStandard_SpectreConsole_ServiceCollectionExtensions_AddSpectreConsole_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_Spectre_Console_Cli_IConfigurator__System_Boolean_
  name: AddSpectreConsole
  nameWithType: ServiceCollectionExtensions.AddSpectreConsole
  fullName: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsole
- uid: System.Action{Spectre.Console.Cli.IConfigurator}
  commentId: T:System.Action{Spectre.Console.Cli.IConfigurator}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IConfigurator>
  nameWithType: Action<IConfigurator>
  fullName: System.Action<Spectre.Console.Cli.IConfigurator>
  nameWithType.vb: Action(Of IConfigurator)
  fullName.vb: System.Action(Of Spectre.Console.Cli.IConfigurator)
  name.vb: Action(Of IConfigurator)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Spectre.Console.Cli.IConfigurator
    name: IConfigurator
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Spectre.Console.Cli.IConfigurator
    name: IConfigurator
    isExternal: true
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsoleSyncCommandExecutor*
  commentId: Overload:Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsoleSyncCommandExecutor
  href: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.html#Coree_NETStandard_SpectreConsole_ServiceCollectionExtensions_AddSpectreConsoleSyncCommandExecutor_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_Spectre_Console_Cli_IConfigurator__System_Boolean_
  name: AddSpectreConsoleSyncCommandExecutor
  nameWithType: ServiceCollectionExtensions.AddSpectreConsoleSyncCommandExecutor
  fullName: Coree.NETStandard.SpectreConsole.ServiceCollectionExtensions.AddSpectreConsoleSyncCommandExecutor
