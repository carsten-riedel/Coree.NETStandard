### YamlMime:ManagedReference
items:
- uid: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions
  commentId: T:Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions
  id: ServiceProviderExtensions
  parent: Coree.NETStandard.HostedServicesCollection
  children:
  - Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy``1(System.IServiceProvider)
  langs:
  - csharp
  - vb
  name: ServiceProviderExtensions
  nameWithType: ServiceProviderExtensions
  fullName: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions
  type: Class
  source:
    remote:
      path: src/Projects/Coree.NETStandard/HostedServicesCollection/ServiceProviderExtensions.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: ServiceProviderExtensions
    path: ../../src/Projects/Coree.NETStandard/HostedServicesCollection/ServiceProviderExtensions.cs
    startLine: 14
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.HostedServicesCollection
  summary: >-
    Provides a set of extension methods for <xref href="System.IServiceProvider" data-throw-if-not-resolved="false"></xref>. These methods extend the functionality

    of <xref href="System.IServiceProvider" data-throw-if-not-resolved="false"></xref> to offer enhanced and simplified service resolution capabilities,

    enabling the retrieval and management of service instances in a more flexible manner.
  example: []
  syntax:
    content: public static class ServiceProviderExtensions
    content.vb: Public Module ServiceProviderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy``1(System.IServiceProvider)
  commentId: M:Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy``1(System.IServiceProvider)
  id: GetHostedServiceCollectionOfTypeLazy``1(System.IServiceProvider)
  isExtensionMethod: true
  parent: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions
  langs:
  - csharp
  - vb
  name: GetHostedServiceCollectionOfTypeLazy<T>(IServiceProvider)
  nameWithType: ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy<T>(IServiceProvider)
  fullName: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy<T>(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/HostedServicesCollection/ServiceProviderExtensions.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: GetHostedServiceCollectionOfTypeLazy
    path: ../../src/Projects/Coree.NETStandard/HostedServicesCollection/ServiceProviderExtensions.cs
    startLine: 63
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.HostedServicesCollection
  summary: >-
    Provides a lazy-initialized collection of hosted services of the specified type <code class="typeparamref">T</code>,

    designed to be used in scenarios where direct service resolution in constructors may lead to race conditions.
  remarks: >-
    This method is particularly useful in complex dependency scenarios, where some services may not be fully

    initialized at the time of a constructor's execution. By deferring the service resolution to the actual

    execution time of a method, it mitigates the risk of encountering race conditions within the service

    initialization stack. It leverages <xref href="System.Lazy%601" data-throw-if-not-resolved="false"></xref> to ensure that the service collection is resolved

    only when it is first needed, thereby enhancing reliability and performance by avoiding unnecessary upfront

    service resolution and instantiation.
  example:
  - >-
    This example demonstrates using <xref href="Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy%60%601(System.IServiceProvider)" data-throw-if-not-resolved="false"></xref> within a service constructor

    to defer the resolution of dependent services, mitigating race conditions:

    <pre><code class="lang-csharp">public class MyService :BackgroundService

    {
        private readonly Lazy&lt;IEnumerable&lt;MyDependentService&gt;&gt; _dependentServices;

        public MyService(IServiceProvider serviceProvider)
        {
            _dependentServices = serviceProvider.GetHostedServiceCollectionOfTypeLazy&lt;MyDependentService&gt;();
        }

        protected override async Task ExecuteAsync(CancellationToken stoppingToken)
        {
            while (!stoppingToken.IsCancellationRequested)
            {
                // The dependent services are resolved here, when first needed, avoiding race conditions.
                foreach(var service in _dependentServices.Value)
                {
                    // Interact with the service
                }
            }
        }
    }</code></pre>
  syntax:
    content: public static Lazy<IEnumerable<T>> GetHostedServiceCollectionOfTypeLazy<T>(this IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: The <xref href="System.IServiceProvider" data-throw-if-not-resolved="false"></xref> from which to retrieve the services.
    typeParameters:
    - id: T
      description: The type of the hosted service to retrieve. This type parameter is contravariant.
    return:
      type: System.Lazy{System.Collections.Generic.IEnumerable{{T}}}
      description: >-
        A <xref href="System.Lazy%601" data-throw-if-not-resolved="false"></xref> object that, when evaluated, provides an <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> representing

        the collection of services of the specified type <code class="typeparamref">T</code>. If no services of the specified

        type are registered, an empty enumerable is returned. This allows safe and deferred resolution of services,

        ideal for use within method implementations to avoid race conditions in service stacks.
    content.vb: Public Shared Function GetHostedServiceCollectionOfTypeLazy(Of T)(serviceProvider As IServiceProvider) As Lazy(Of IEnumerable(Of T))
  overload: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy*
  nameWithType.vb: ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy(Of T)(IServiceProvider)
  fullName.vb: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy(Of T)(System.IServiceProvider)
  name.vb: GetHostedServiceCollectionOfTypeLazy(Of T)(IServiceProvider)
references:
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Coree.NETStandard.HostedServicesCollection
  commentId: N:Coree.NETStandard.HostedServicesCollection
  href: Coree.html
  name: Coree.NETStandard.HostedServicesCollection
  nameWithType: Coree.NETStandard.HostedServicesCollection
  fullName: Coree.NETStandard.HostedServicesCollection
  spec.csharp:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.HostedServicesCollection
    name: HostedServicesCollection
    href: Coree.NETStandard.HostedServicesCollection.html
  spec.vb:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.HostedServicesCollection
    name: HostedServicesCollection
    href: Coree.NETStandard.HostedServicesCollection.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Lazy`1
  commentId: T:System.Lazy`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  nameWithType.vb: Lazy(Of T)
  fullName.vb: System.Lazy(Of T)
  name.vb: Lazy(Of T)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy``1(System.IServiceProvider)
  commentId: M:Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy``1(System.IServiceProvider)
  isExternal: true
  href: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.html#Coree_NETStandard_HostedServicesCollection_ServiceProviderExtensions_GetHostedServiceCollectionOfTypeLazy__1_System_IServiceProvider_
  name: GetHostedServiceCollectionOfTypeLazy<T>(IServiceProvider)
  nameWithType: ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy<T>(IServiceProvider)
  fullName: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy<T>(System.IServiceProvider)
  nameWithType.vb: ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy(Of T)(IServiceProvider)
  fullName.vb: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy(Of T)(System.IServiceProvider)
  name.vb: GetHostedServiceCollectionOfTypeLazy(Of T)(IServiceProvider)
  spec.csharp:
  - uid: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy``1(System.IServiceProvider)
    name: GetHostedServiceCollectionOfTypeLazy
    href: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.html#Coree_NETStandard_HostedServicesCollection_ServiceProviderExtensions_GetHostedServiceCollectionOfTypeLazy__1_System_IServiceProvider_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: )
  spec.vb:
  - uid: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy``1(System.IServiceProvider)
    name: GetHostedServiceCollectionOfTypeLazy
    href: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.html#Coree_NETStandard_HostedServicesCollection_ServiceProviderExtensions_GetHostedServiceCollectionOfTypeLazy__1_System_IServiceProvider_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: )
- uid: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy*
  commentId: Overload:Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy
  href: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.html#Coree_NETStandard_HostedServicesCollection_ServiceProviderExtensions_GetHostedServiceCollectionOfTypeLazy__1_System_IServiceProvider_
  name: GetHostedServiceCollectionOfTypeLazy
  nameWithType: ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy
  fullName: Coree.NETStandard.HostedServicesCollection.ServiceProviderExtensions.GetHostedServiceCollectionOfTypeLazy
- uid: System.Lazy{System.Collections.Generic.IEnumerable{{T}}}
  commentId: T:System.Lazy{System.Collections.Generic.IEnumerable{``0}}
  parent: System
  definition: System.Lazy`1
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  name: Lazy<IEnumerable<T>>
  nameWithType: Lazy<IEnumerable<T>>
  fullName: System.Lazy<System.Collections.Generic.IEnumerable<T>>
  nameWithType.vb: Lazy(Of IEnumerable(Of T))
  fullName.vb: System.Lazy(Of System.Collections.Generic.IEnumerable(Of T))
  name.vb: Lazy(Of IEnumerable(Of T))
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
