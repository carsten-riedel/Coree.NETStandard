### YamlMime:ManagedReference
items:
- uid: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1
  commentId: T:Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1
  id: IHostedServicesCollectionConfig`1
  parent: Coree.NETStandard.HostedServicesCollection
  children:
  - Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1.Enqueue(`0)
  - Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1.FetchNextConfig
  langs:
  - csharp
  - vb
  name: IHostedServicesCollectionConfig<T>
  nameWithType: IHostedServicesCollectionConfig<T>
  fullName: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig<T>
  type: Interface
  source:
    remote:
      path: src/Projects/Coree.NETStandard/HostedServicesCollection/HostedServicesCollectionConfig.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: IHostedServicesCollectionConfig
    path: ../../src/Projects/Coree.NETStandard/HostedServicesCollection/HostedServicesCollectionConfig.cs
    startLine: 9
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.HostedServicesCollection
  summary: >-
    Defines a contract for a configuration collection for hosted services, allowing the enqueuing of configuration items

    and retrieval of the next configuration item.
  example: []
  syntax:
    content: public interface IHostedServicesCollectionConfig<T>
    typeParameters:
    - id: T
      description: The type of the configuration item.
    content.vb: Public Interface IHostedServicesCollectionConfig(Of T)
  nameWithType.vb: IHostedServicesCollectionConfig(Of T)
  fullName.vb: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig(Of T)
  name.vb: IHostedServicesCollectionConfig(Of T)
- uid: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1.Enqueue(`0)
  commentId: M:Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1.Enqueue(`0)
  id: Enqueue(`0)
  parent: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1
  langs:
  - csharp
  - vb
  name: Enqueue(T)
  nameWithType: IHostedServicesCollectionConfig<T>.Enqueue(T)
  fullName: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig<T>.Enqueue(T)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/HostedServicesCollection/HostedServicesCollectionConfig.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: Enqueue
    path: ../../src/Projects/Coree.NETStandard/HostedServicesCollection/HostedServicesCollectionConfig.cs
    startLine: 15
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.HostedServicesCollection
  summary: Enqueues a new configuration item into the collection.
  example: []
  syntax:
    content: void Enqueue(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The configuration item to be added to the queue.
    content.vb: Sub Enqueue(item As T)
  overload: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1.Enqueue*
  nameWithType.vb: IHostedServicesCollectionConfig(Of T).Enqueue(T)
  fullName.vb: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig(Of T).Enqueue(T)
- uid: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1.FetchNextConfig
  commentId: M:Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1.FetchNextConfig
  id: FetchNextConfig
  parent: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1
  langs:
  - csharp
  - vb
  name: FetchNextConfig()
  nameWithType: IHostedServicesCollectionConfig<T>.FetchNextConfig()
  fullName: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig<T>.FetchNextConfig()
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/HostedServicesCollection/HostedServicesCollectionConfig.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: FetchNextConfig
    path: ../../src/Projects/Coree.NETStandard/HostedServicesCollection/HostedServicesCollectionConfig.cs
    startLine: 22
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.HostedServicesCollection
  summary: >-
    Fetches the next configuration item from the queue, removing it from the collection.

    If the queue is empty, returns a new instance of the configuration item type.
  example: []
  syntax:
    content: T FetchNextConfig()
    return:
      type: '{T}'
      description: The next configuration item if available; otherwise, a new instance of the configuration item type.
    content.vb: Function FetchNextConfig() As T
  overload: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1.FetchNextConfig*
  nameWithType.vb: IHostedServicesCollectionConfig(Of T).FetchNextConfig()
  fullName.vb: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig(Of T).FetchNextConfig()
references:
- uid: Coree.NETStandard.HostedServicesCollection
  commentId: N:Coree.NETStandard.HostedServicesCollection
  href: Coree.html
  name: Coree.NETStandard.HostedServicesCollection
  nameWithType: Coree.NETStandard.HostedServicesCollection
  fullName: Coree.NETStandard.HostedServicesCollection
  spec.csharp:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.HostedServicesCollection
    name: HostedServicesCollection
    href: Coree.NETStandard.HostedServicesCollection.html
  spec.vb:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.HostedServicesCollection
    name: HostedServicesCollection
    href: Coree.NETStandard.HostedServicesCollection.html
- uid: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1.Enqueue*
  commentId: Overload:Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1.Enqueue
  href: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig-1.html#Coree_NETStandard_HostedServicesCollection_IHostedServicesCollectionConfig_1_Enqueue__0_
  name: Enqueue
  nameWithType: IHostedServicesCollectionConfig<T>.Enqueue
  fullName: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig<T>.Enqueue
  nameWithType.vb: IHostedServicesCollectionConfig(Of T).Enqueue
  fullName.vb: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig(Of T).Enqueue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1.FetchNextConfig*
  commentId: Overload:Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig`1.FetchNextConfig
  href: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig-1.html#Coree_NETStandard_HostedServicesCollection_IHostedServicesCollectionConfig_1_FetchNextConfig
  name: FetchNextConfig
  nameWithType: IHostedServicesCollectionConfig<T>.FetchNextConfig
  fullName: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig<T>.FetchNextConfig
  nameWithType.vb: IHostedServicesCollectionConfig(Of T).FetchNextConfig
  fullName.vb: Coree.NETStandard.HostedServicesCollection.IHostedServicesCollectionConfig(Of T).FetchNextConfig
