### YamlMime:ManagedReference
items:
- uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1
  commentId: T:Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1
  id: DependencySingleton`1
  parent: Coree.NETStandard.Abstractions.DependencySingleton
  children:
  - Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.#ctor(Microsoft.Extensions.Logging.ILogger{`0},Microsoft.Extensions.Configuration.IConfiguration)
  - Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.Instance
  - Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
  - Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.configuration
  - Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.logger
  langs:
  - csharp
  - vb
  name: DependencySingleton<T>
  nameWithType: DependencySingleton<T>
  fullName: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton<T>
  type: Class
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/DependencySingleton/DependencySingleton.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: DependencySingleton
    path: ../../src/Projects/Coree.NETStandard/Abstractions/DependencySingleton/DependencySingleton.cs
    startLine: 65
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.DependencySingleton
  summary: >-
    Represents an abstract base class for creating thread-safe singleton instances with optional dependency injection support.

    This pattern can be utilized in both dependency injection (DI) and non-DI scenarios.

    Example usage:

    <pre><code class="lang-csharp"> //File ISampleSerivce.cs
     public interface ISampleService
     {
         Task StandardDelayAsync(CancellationToken cancellationToken = default);  void StandardDelay();
     }

     //File DSSampleSerivce.cs
     public partial class SampleService : DependencySingleton&lt;SampleService&gt;, ISampleService , IDependencySingleton
     {
         public SampleService(ILogger&lt;SampleService&gt; logger, IConfiguration configuration) : base(logger, configuration) { }
     }

     //File SampleSerivce.cs
     public partial class SampleService : DependencySingleton&lt;SampleService&gt;, ISampleService , IDependencySingleton
     {
         public void StandardDelay() { StandardDelayAsync(CancellationToken.None).GetAwaiter().GetResult(); }
         public async Task StandardDelayAsync(CancellationToken cancellationToken = default)  { await Task.Delay(5000, cancellationToken); }
     }

     //File Program.cs
     static async Task Main(string[] args)
     {
        SampleService.Instance.SetMinimumLogLevel(LogLevel.Trace);
        // The ILogger&lt;SampleService&gt; logger and IConfiguration configuration will be initialized with their own service stacks.
        SampleService.Instance.StandardDelay();

        // Normal DI usage
        var host = Host.CreateDefaultBuilder(args)
            .ConfigureLogging((context, logging) =&gt; {  logging.AddConsole(); logging.AddDebug(); })
            .ConfigureServices((context, services) =&gt; { services.AddSingleton&lt;ISampleService,SampleService&gt;(); services.AddSingleton&lt;IMyService,MyService&gt;(); });
        await host.Build().RunAsync();
     }

     //Service usage
     public class MyService
     {
         private readonly ISampleService sampleService;

         public MyService(ISampleService sampleService)
         {
             this.sampleService = sampleService;
         }

         public async Task UseSample()
         {
             await sampleService.StandardDelayAsync();
         }
    }</code></pre>
  example: []
  syntax:
    content: 'public abstract class DependencySingleton<T> : IDependencySingleton'
    typeParameters:
    - id: T
      description: The type of the singleton instance.
    content.vb: Public MustInherit Class DependencySingleton(Of T) Implements IDependencySingleton
  inheritance:
  - System.Object
  implements:
  - Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: DependencySingleton(Of T)
  fullName.vb: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton(Of T)
  name.vb: DependencySingleton(Of T)
- uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
  id: SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
  parent: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1
  langs:
  - csharp
  - vb
  name: SetLogLevelFilter(LogLevel)
  nameWithType: DependencySingleton<T>.SetLogLevelFilter(LogLevel)
  fullName: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton<T>.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
  type: Method
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/DependencySingleton/DependencySingleton.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: SetLogLevelFilter
    path: ../../src/Projects/Coree.NETStandard/Abstractions/DependencySingleton/DependencySingleton.cs
    startLine: 102
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.DependencySingleton
  summary: >-
    Sets the minimum log level filter for the application. This level acts as a filter for the logs that are emitted.

    Logs below this level will not be emitted. Default is Information
  example: []
  syntax:
    content: public void SetLogLevelFilter(LogLevel logLevel = LogLevel.Information)
    parameters:
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
      description: The log level to set as the minimum threshold for logging.
    content.vb: Public Sub SetLogLevelFilter(logLevel As LogLevel = LogLevel.Information)
  overload: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.SetLogLevelFilter*
  implements:
  - Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
  nameWithType.vb: DependencySingleton(Of T).SetLogLevelFilter(LogLevel)
  fullName.vb: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton(Of T).SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
- uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.Instance
  commentId: P:Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.Instance
  id: Instance
  parent: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: DependencySingleton<T>.Instance
  fullName: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton<T>.Instance
  type: Property
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/DependencySingleton/DependencySingleton.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: Instance
    path: ../../src/Projects/Coree.NETStandard/Abstractions/DependencySingleton/DependencySingleton.cs
    startLine: 117
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.DependencySingleton
  summary: Gets the singleton instance of the class, ensuring thread safety.
  example: []
  syntax:
    content: public static T Instance { get; }
    parameters: []
    return:
      type: '{T}'
      description: >-
        The singleton instance of type <code class="typeparamref">T</code>, which is the specific implementation of the

        <xref href="Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton%601" data-throw-if-not-resolved="false"></xref>. Type <code class="typeparamref">T</code> represents the derived singleton class that includes

        implementations for required services such as logging and configuration. The instance is initialized with these services

        upon the first request, adhering to the singleton pattern to ensure only one instance is created and shared throughout

        the application.
    content.vb: Public Shared ReadOnly Property Instance As T
  overload: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.Instance*
  nameWithType.vb: DependencySingleton(Of T).Instance
  fullName.vb: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton(Of T).Instance
- uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.logger
  commentId: F:Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.logger
  id: logger
  parent: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1
  langs:
  - csharp
  - vb
  name: logger
  nameWithType: DependencySingleton<T>.logger
  fullName: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton<T>.logger
  type: Field
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/DependencySingleton/DependencySingleton.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: logger
    path: ../../src/Projects/Coree.NETStandard/Abstractions/DependencySingleton/DependencySingleton.cs
    startLine: 125
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.DependencySingleton
  summary: >-
    Provides logging capabilities for the singleton instance. By default, the logger's minimum logging level is set to Trace,

    allowing all log messages to be captured. However, the default filter level applied to log messages is set to Information,

    meaning that only logs at Information level or higher will be emitted unless otherwise adjusted. The logging level filter

    can be dynamically changed at runtime using the <xref href="Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton%601.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)" data-throw-if-not-resolved="false"></xref> method to control the verbosity of the logging output.
  example: []
  syntax:
    content: protected readonly ILogger<T> logger
    return:
      type: Microsoft.Extensions.Logging.ILogger{{T}}
    content.vb: Protected ReadOnly logger As ILogger(Of T)
  nameWithType.vb: DependencySingleton(Of T).logger
  fullName.vb: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton(Of T).logger
- uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.configuration
  commentId: F:Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.configuration
  id: configuration
  parent: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1
  langs:
  - csharp
  - vb
  name: configuration
  nameWithType: DependencySingleton<T>.configuration
  fullName: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton<T>.configuration
  type: Field
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/DependencySingleton/DependencySingleton.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: configuration
    path: ../../src/Projects/Coree.NETStandard/Abstractions/DependencySingleton/DependencySingleton.cs
    startLine: 133
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.DependencySingleton
  summary: >-
    Represents the configuration for the application. This encompasses settings from

    various configuration sources (e.g., appsettings.json, environment variables) and

    is used to access DependencySingleton settings such as connection strings, feature

    toggles, and other configurable aspects of the application.
  example: []
  syntax:
    content: protected readonly IConfiguration configuration
    return:
      type: Microsoft.Extensions.Configuration.IConfiguration
    content.vb: Protected ReadOnly configuration As IConfiguration
  nameWithType.vb: DependencySingleton(Of T).configuration
  fullName.vb: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton(Of T).configuration
- uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.#ctor(Microsoft.Extensions.Logging.ILogger{`0},Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.#ctor(Microsoft.Extensions.Logging.ILogger{`0},Microsoft.Extensions.Configuration.IConfiguration)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger{`0},Microsoft.Extensions.Configuration.IConfiguration)'
  parent: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1
  langs:
  - csharp
  - vb
  name: DependencySingleton(ILogger<T>, IConfiguration)
  nameWithType: DependencySingleton<T>.DependencySingleton(ILogger<T>, IConfiguration)
  fullName: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton<T>.DependencySingleton(Microsoft.Extensions.Logging.ILogger<T>, Microsoft.Extensions.Configuration.IConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Projects/Coree.NETStandard/Abstractions/DependencySingleton/DependencySingleton.cs
      branch: master
      repo: https://github.com/carsten-riedel/Coree.NETStandard
    id: .ctor
    path: ../../src/Projects/Coree.NETStandard/Abstractions/DependencySingleton/DependencySingleton.cs
    startLine: 141
  assemblies:
  - Coree.NETStandard
  namespace: Coree.NETStandard.Abstractions.DependencySingleton
  summary: >-
    Initializes a new instance of the <xref href="Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton%601" data-throw-if-not-resolved="false"></xref> class

    with the specified logger and configuration services.
  example: []
  syntax:
    content: protected DependencySingleton(ILogger<T> logger, IConfiguration configuration)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{{T}}
      description: The logger service.
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: The configuration service.
    content.vb: Protected Sub New(logger As ILogger(Of T), configuration As IConfiguration)
  overload: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.#ctor*
  nameWithType.vb: DependencySingleton(Of T).New(ILogger(Of T), IConfiguration)
  fullName.vb: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton(Of T).New(Microsoft.Extensions.Logging.ILogger(Of T), Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(ILogger(Of T), IConfiguration)
references:
- uid: Coree.NETStandard.Abstractions.DependencySingleton
  commentId: N:Coree.NETStandard.Abstractions.DependencySingleton
  href: Coree.html
  name: Coree.NETStandard.Abstractions.DependencySingleton
  nameWithType: Coree.NETStandard.Abstractions.DependencySingleton
  fullName: Coree.NETStandard.Abstractions.DependencySingleton
  spec.csharp:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Abstractions
    name: Abstractions
    href: Coree.NETStandard.Abstractions.html
  - name: .
  - uid: Coree.NETStandard.Abstractions.DependencySingleton
    name: DependencySingleton
    href: Coree.NETStandard.Abstractions.DependencySingleton.html
  spec.vb:
  - uid: Coree
    name: Coree
    href: Coree.html
  - name: .
  - uid: Coree.NETStandard
    name: NETStandard
    href: Coree.NETStandard.html
  - name: .
  - uid: Coree.NETStandard.Abstractions
    name: Abstractions
    href: Coree.NETStandard.Abstractions.html
  - name: .
  - uid: Coree.NETStandard.Abstractions.DependencySingleton
    name: DependencySingleton
    href: Coree.NETStandard.Abstractions.DependencySingleton.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton
  commentId: T:Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton
  parent: Coree.NETStandard.Abstractions.DependencySingleton
  href: Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton.html
  name: IDependencySingleton
  nameWithType: IDependencySingleton
  fullName: Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.SetLogLevelFilter*
  commentId: Overload:Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.SetLogLevelFilter
  href: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton-1.html#Coree_NETStandard_Abstractions_DependencySingleton_DependencySingleton_1_SetLogLevelFilter_Microsoft_Extensions_Logging_LogLevel_
  name: SetLogLevelFilter
  nameWithType: DependencySingleton<T>.SetLogLevelFilter
  fullName: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton<T>.SetLogLevelFilter
  nameWithType.vb: DependencySingleton(Of T).SetLogLevelFilter
  fullName.vb: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton(Of T).SetLogLevelFilter
- uid: Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
  parent: Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton
  isExternal: true
  href: Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton.html#Coree_NETStandard_Abstractions_DependencySingleton_IDependencySingleton_SetLogLevelFilter_Microsoft_Extensions_Logging_LogLevel_
  name: SetLogLevelFilter(LogLevel)
  nameWithType: IDependencySingleton.SetLogLevelFilter(LogLevel)
  fullName: Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
    name: SetLogLevelFilter
    href: Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton.html#Coree_NETStandard_Abstractions_DependencySingleton_IDependencySingleton_SetLogLevelFilter_Microsoft_Extensions_Logging_LogLevel_
  - name: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  - name: )
  spec.vb:
  - uid: Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
    name: SetLogLevelFilter
    href: Coree.NETStandard.Abstractions.DependencySingleton.IDependencySingleton.html#Coree_NETStandard_Abstractions_DependencySingleton_IDependencySingleton_SetLogLevelFilter_Microsoft_Extensions_Logging_LogLevel_
  - name: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  - name: )
- uid: Microsoft.Extensions.Logging.LogLevel
  commentId: T:Microsoft.Extensions.Logging.LogLevel
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.Extensions.Logging.LogLevel
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1
  commentId: T:Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1
  href: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton-1.html
  name: DependencySingleton<T>
  nameWithType: DependencySingleton<T>
  fullName: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton<T>
  nameWithType.vb: DependencySingleton(Of T)
  fullName.vb: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton(Of T)
  name.vb: DependencySingleton(Of T)
  spec.csharp:
  - uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1
    name: DependencySingleton
    href: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1
    name: DependencySingleton
    href: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.Instance*
  commentId: Overload:Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.Instance
  href: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton-1.html#Coree_NETStandard_Abstractions_DependencySingleton_DependencySingleton_1_Instance
  name: Instance
  nameWithType: DependencySingleton<T>.Instance
  fullName: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton<T>.Instance
  nameWithType.vb: DependencySingleton(Of T).Instance
  fullName.vb: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton(Of T).Instance
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
  isExternal: true
  href: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton-1.html#Coree_NETStandard_Abstractions_DependencySingleton_DependencySingleton_1_SetLogLevelFilter_Microsoft_Extensions_Logging_LogLevel_
  name: SetLogLevelFilter(LogLevel)
  nameWithType: DependencySingleton<T>.SetLogLevelFilter(LogLevel)
  fullName: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton<T>.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
  nameWithType.vb: DependencySingleton(Of T).SetLogLevelFilter(LogLevel)
  fullName.vb: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton(Of T).SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
    name: SetLogLevelFilter
    href: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton-1.html#Coree_NETStandard_Abstractions_DependencySingleton_DependencySingleton_1_SetLogLevelFilter_Microsoft_Extensions_Logging_LogLevel_
  - name: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  - name: )
  spec.vb:
  - uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.SetLogLevelFilter(Microsoft.Extensions.Logging.LogLevel)
    name: SetLogLevelFilter
    href: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton-1.html#Coree_NETStandard_Abstractions_DependencySingleton_DependencySingleton_1_SetLogLevelFilter_Microsoft_Extensions_Logging_LogLevel_
  - name: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger{{T}}
  commentId: T:Microsoft.Extensions.Logging.ILogger{`0}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<T>
  nameWithType: ILogger<T>
  fullName: Microsoft.Extensions.Logging.ILogger<T>
  nameWithType.vb: ILogger(Of T)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of T)
  name.vb: ILogger(Of T)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
- uid: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.#ctor*
  commentId: Overload:Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton`1.#ctor
  href: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton-1.html#Coree_NETStandard_Abstractions_DependencySingleton_DependencySingleton_1__ctor_Microsoft_Extensions_Logging_ILogger__0__Microsoft_Extensions_Configuration_IConfiguration_
  name: DependencySingleton
  nameWithType: DependencySingleton<T>.DependencySingleton
  fullName: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton<T>.DependencySingleton
  nameWithType.vb: DependencySingleton(Of T).New
  fullName.vb: Coree.NETStandard.Abstractions.DependencySingleton.DependencySingleton(Of T).New
  name.vb: New
